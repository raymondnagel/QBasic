COMMON PROGRESS$, SPEED, BOOMERANG, MAX, MAN, ROOM, CASTLE, X, Y, PX, PY, FACE$, STEPS, MONEY, KEYS, ITEM$, SOUND$, NAME$, COUNTRY$, SAVEFILE$
SCREEN 13: CLS
MAGMA = 40: FLOW = 4: BOOMERANG = 4
PRELUDE$ = "T200MNL1O3CCL4C<G>C<G>GL8FEDED<G>L4EB>L1C"


'TIME = TIMER + 1: WHILE TIMER < TIME: WEND

BOOM$ = "MsT255L64MBO4cO2FMN": IF SOUND$ = "MUTE" THEN BOOM$ = ""
RECORDERMUSIC$ = "MFT80O4MLL64GF#GF#>CBCBED#ED#GF#GF#GF#GF#ED#ED#GF#GF#GF#GF#GF#GF#P1": IF SOUND$ = "MUTE" THEN RECORDERMUSIC$ = ""
POW2$ = "t255l64o1mlcgdafe>cgdafe<cgdafemn": IF SOUND$ = "MUTE" THEN POW2$ = ""
POW1$ = "t255l64o3msccccc<bbbb<aaa<gg<ff<e": IF SOUND$ = "MUTE" THEN POW1$ = ""
WARP$ = "T255L64MSO3CD>CD>CDO3EF>EF>EFO3GA>GA>GAMN": IF SOUND$ = "MUTE" THEN WARP$ = ""
SHUTTERNOISE$ = "T255L64O2MLCBCACGCFCECDCMN": IF SOUND$ = "MUTE" THEN SHUTTERNOISE$ = ""
GETHEART$ = "T255mnL64O5CEGB": IF SOUND$ = "MUTE" THEN GETHEART$ = ""
GETKEY$ = "T255mnL64O6CEFGBDEFB": IF SOUND$ = "MUTE" THEN GETKEY$ = ""
OPENLOCK$ = "T255mnL64O2CEFECFECEFCE": IF SOUND$ = "MUTE" THEN OPENLOCK$ = ""
getchest$ = "t255l32mlo3cdefedefgfefgagfgabagmn": IF SOUND$ = "MUTE" THEN getchest$ = ""
HAMMERSTRIKE$ = "T255MLL64O2CDEFGGABBGFEDCCCCCC<BBFEDMN": IF SOUND$ = "MUTE" THEN HAMMERSTRIKE$ = ""
POP$ = "T255L50MSCDEDECDCEDDCEDE": IF SOUND$ = "MUTE" THEN POP$ = ""
DREAD$ = "p4mfmso2t60l40c<bms>b>>l4<c<l52mlbgfedc<l8bl3ms>cp16": IF SOUND$ = "MUTE" THEN DREAD$ = ""
GULP$ = "t255l40mlo2ccdeefggabbgecp32ccdeefggabbgecp32ccdeffgabbgec": IF SOUND$ = "MUTE" THEN GULP$ = ""
SECRET$ = "MLO5L45T255P2EDEDCCDCDEFEFGBAB>CCCCCC": IF SOUND$ = "MUTE" THEN SECRET$ = ""
SPLUT$ = "MST255L64O1bC": IF SOUND$ = "MUTE" THEN SPLUT$ = ""
PAUSE$ = "MNL16T200O2CECG."





'                          ***SCENE IMAGES***
'LIGHT color  = SCOLOR1$
'MEDIUM color = SCOLOR2$
'DARK color   = SCOLOR3$
SCOLOR1$ = "014": SCOLOR2$ = "043": SCOLOR3$ = "042"




METER$ = "LIFE"
ITEM = 1
STEPS = 1

BLOCK$ = "BM0,30CxxxF9BL9E9G3L3D3R3U4CxxxL3HR5EL7GD7EU5FD3FCxxxR3FL5GR7EU7GD5HU3"
PILLAR$ = "BM10,30BM+3,+7CxxxGDR5UHGLEU6FEUL5DFEBLCxxxD0BR3D0BD7D0BL3D0EU5BM+2,-1CxxxD0BD7D0"
DOOR$ = "BM20,30BR2CxxxR4F2D7BL8U7EBM+2,+4DBR2ULCxxxU4D8BM+3,-1D0BU5D0BL6D0BD5DCxxxR2ULHR2HLURHR2ULHR2ULBR3RGR2GLDR2DLDRDL2DRGR2CxxxBR2U9GULBL6LDCxxxURBR6CxxxRDBM+1,+4D3"
BRICKWALL$ = "BM30,30CxxxR9D9L9U9BFPxxx,xxxCxxxHR3L3D2BM+9,+3L3D2EBM-7,-2CxxxR9NU4L4D5NL5R4"
STAIRCASE$ = "BM40,30CxxxR9D9L9U9BFCxxxRND7FRND6FRND5FRD4CxxxBLNU3BL2NU4BL2NU5BL2U6"
STATUE$ = "BM10,30BRCxxxFDLE2R3FNEFLBL2LUCxxxRF2LDL3ULEUCxxxD0BR3D0BG2R"
TREE$ = "BM90,30C117BFBDER5L2DRFEDL5ULGFR3BR2RGL2FBM-5,-1FEDRDC112D2LR3LU2"
GRASS$ = "BM100,30C117bf2dbf2dbf2dc116bm-5,-1ubm+4,-5ubf3d"
MOUNT$ = "BM110,30C21R9D9L9U8BRP21,21EC20F2DFBL3GHBD5EBM+3,-1FDBR2E2BM-2,-4UHE"
SIGN$ = "BM170,30BM+4,+9C6U5C7NL2R2UL4R2UC6D0"
SHRUBS$ = "BM200,30BDC190D2RNU3RNU3RNU3RNU2F2D2NU4RNU4RNU4EU3C118ULULDLUGDGNL3FNL5DNL5DNL5GL3FC112RBM+3,-1R"
WATER$ = "BM210,30C1D9R9U9L8BDP1,1BHC55RFRFRFRFRBU4NLBD8LHLHLHLHLBD4RFRBR4C9LHLHLHLBU4RFRFRFRFRBU4LHLHL"
LAVA$ = "BM230,30C42D9R9U9L8BDP42,42BHC43RFRFRFRFRBU4NLBD8LHLHLHLHLBD4RFRBR4C44LHLHLHLBU4RFRFRFRFRBU4LHLHL"
MAN$ = "BM240,30BR3C6NDR3GC9LC65GR2GRC1RFL6ERD2R2DC8NL2DBL2D2LBR4LUC7D0BL2D0BM-2,-3C65D0BR6D0"
LADY$ = "BM250,30BR3C6RFL2GDEC1R2GC64UC65GFEFC5D0BL4DC65D0BR4DC15D0BL4RC5R2UC13UGLUBD3R2FL4DR4BLC5D0BL2D0"
GEEZER$ = "BM260,30BR3C65NGR2NGFGL2FBLC7DRDEUBU2C8D0BL2D0BD4C6L2URUBR4FDHDLFC8L4BD3LR2BR2R2HC6L4UR4GC65D0BL2D0BH2D0BM+7,-2D3C8U2BU2EUL"
MERCHANT$ = "BM270,30BF2C8URUR3FLC7L2BG2D0BBM+2,-1C1D0BR2DC65HDLBG3D0BR7UC2L7ENR5BM+1,+2R3BD3C8R2HBL4GR2UC5ULBR4NGNLBH2NENH"
BEACHUL$ = "BM290,30C1D9R9U9L8BDP1,1BHC55RFRFRFRFRBU4NLBD8LHLHLHLHLBD4RFRBR4C9LHLHLHLBU4RFRFRFRFRBU4LHLHLC0L2DHND2LD4"
BEACHUR$ = "BM300,30C1D9R9U9L8BDP1,1BHC55RFRFRFRFRBU4NLBD8LHLHLHLHLBD4RFRBR4C9LHLHLHLBU4RFRFRFRFRBU4LHLHLBRC0R4DNL2DNLD2"
BEACHDL$ = "BM310,30C1D9R9U9L8BDP1,1BHC55RFRFRFRFRBU4NLBD8LHLHLHLHLBD4RFRBR4C9LHLHLHLBU4RFRFRFRFRBU4LHLHLBM-4,+5C0D4RNU2RNUR2"
BEACHDR$ = "BM0,40C1D9R9U9L8BDP1,1BHC55RFRFRFRFRBU4NLBD8LHLHLHLHLBD4RFRBR4C9LHLHLHLBU4RFRFRFRFRBU4LHLHLBM+1,+9C0R4UNL2UNLU2"
KID$ = "BM10,40BM+3,+2C6R2DC1L2RC65DNLRFDL4UC12NR4FR2G2C7UR2D2C8NRBL2L"

MID$(BLOCK$, 8, 3) = SCOLOR2$: MID$(BLOCK$, 29, 3) = SCOLOR1$: MID$(BLOCK$, 51, 3) = SCOLOR3$
MID$(PILLAR$, 16, 3) = SCOLOR2$: MID$(PILLAR$, 41, 3) = SCOLOR1$: MID$(PILLAR$, 72, 3) = SCOLOR3$
MID$(DOOR$, 12, 3) = SCOLOR3$: MID$(DOOR$, 41, 3) = SCOLOR2$: MID$(DOOR$, 72, 3) = SCOLOR1$: MID$(DOOR$, 121, 3) = SCOLOR3$: MID$(DOOR$, 138, 3) = SCOLOR1$: MID$(DOOR$, 147, 3) = SCOLOR2$
MID$(BRICKWALL$, 9, 3) = SCOLOR2$: MID$(BRICKWALL$, 23, 3) = SCOLOR2$: MID$(BRICKWALL$, 27, 3) = SCOLOR2$: MID$(BRICKWALL$, 31, 3) = SCOLOR1$: MID$(BRICKWALL$, 61, 3) = SCOLOR3$
MID$(STATUE$, 11, 3) = SCOLOR3$: MID$(STATUE$, 32, 3) = SCOLOR2$: MID$(STATUE$, 47, 3) = SCOLOR1$

DRAW BLOCK$
DRAW PILLAR$
DRAW DOOR$
DRAW BRICKWALL$
DRAW TREE$
DRAW GRASS$
DRAW MOUNT$
DRAW SIGN$
DRAW SHRUBS$
DRAW WATER$
DRAW LAVA$
DRAW MAN$
DRAW LADY$
DRAW GEEZER$
DRAW MERCHANT$
DRAW BEACHUL$
DRAW BEACHUR$
DRAW BEACHDL$
DRAW BEACHDR$
DRAW KID$
DIM BLOCK(1 TO 26): GET (0, 30)-(9, 39), BLOCK
DIM PILLAR(1 TO 26): GET (10, 30)-(19, 39), PILLAR
DRAW STATUE$
DIM DOOR(1 TO 26): GET (20, 30)-(29, 39), DOOR
DIM BRICKWALL(1 TO 26): GET (30, 30)-(39, 39), BRICKWALL
DIM STAIRCASE(1 TO 26): GET (40, 30)-(49, 39), STAIRCASE
DIM STATUE(1 TO 26): GET (10, 30)-(19, 39), STATUE
DIM ROCK(1 TO 26): GET (50, 30)-(59, 39), ROCK
DIM TOMB(1 TO 26): GET (60, 30)-(69, 39), TOMB
DIM KEYLOCK(1 TO 26): GET (70, 30)-(79, 39), KEYLOCK
DIM BARRIER(1 TO 26): GET (80, 30)-(89, 39), BARRIER
DIM TREE(1 TO 26): GET (90, 30)-(99, 39), TREE
DIM GRASS(1 TO 26): GET (100, 30)-(109, 39), GRASS
DIM MOUNT(1 TO 26): GET (110, 30)-(119, 39), MOUNT
DIM MOUNTL(1 TO 26): GET (120, 30)-(129, 39), MOUNTL
DIM MOUNTR(1 TO 26): GET (130, 30)-(139, 39), MOUNTR
DIM MOUNTT(1 TO 26): GET (140, 30)-(149, 39), MOUNTT
DIM LADDER(1 TO 26): GET (150, 30)-(159, 39), LADDER
DIM CAVE(1 TO 26): GET (160, 30)-(169, 39), CAVE
DIM SIGN(1 TO 26): GET (170, 30)-(179, 39), SIGN
DIM MONUMENT(1 TO 26): GET (180, 30)-(189, 39), MONUMENT
DIM CHEST(1 TO 26): GET (190, 30)-(199, 39), CHEST
DIM SHRUB(1 TO 26): GET (200, 30)-(209, 39), SHRUB
DIM WATER(1 TO 26): GET (210, 30)-(219, 39), WATER
DIM CAVEWALL(1 TO 26): GET (220, 30)-(229, 39), CAVEWALL
DIM LAVA(1 TO 26): GET (230, 30)-(239, 39), LAVA
DIM MAN(1 TO 26): GET (240, 30)-(249, 39), MAN
DIM LADY(1 TO 26): GET (250, 30)-(259, 39), LADY
DIM GEEZER(1 TO 26): GET (260, 30)-(269, 39), GEEZER
DIM MERCHANT(1 TO 26): GET (270, 30)-(279, 39), MERCHANT
DIM INCAVE(1 TO 26): GET (280, 30)-(289, 39), INCAVE
DIM BEACHUL(1 TO 26): GET (290, 30)-(299, 39), BEACHUL
DIM BEACHUR(1 TO 26): GET (300, 30)-(309, 39), BEACHUR
DIM BEACHDL(1 TO 26): GET (310, 30)-(319, 39), BEACHDL
DIM BEACHDR(1 TO 26): GET (0, 40)-(9, 49), BEACHDR
DIM KID(1 TO 26): GET (10, 40)-(19, 49), KID


'                           ***HERO IMAGE***
DRAW "BM0,0BR3C6R2NRDc1D0BLC65LDR2GDc4L2GC65D0BM+6,-2Gc4L2D2c9RDL3C65LC15DBR4DRHC65D0"
DIM MAN1R(1 TO 26): GET (0, 0)-(9, 9), MAN1R
DRAW "BM10,0BR3C6R2NRDc1LC65LDR2GDc4DEL2GC65D0BR4Gc9LDRGC65FC15LHG"
DIM MAN2R(1 TO 26): GET (10, 0)-(19, 9), MAN2R
DRAW "BM25,0C6L2NLDc1D0BRC65RDL2FDc4R2FC65D0BM-6,-2Fc4R2D2c9LDR3C65RC15DBL4DLEC65D0"
DIM MAN1L(1 TO 26): GET (20, 0)-(29, 9), MAN1L
DRAW "BM30,0BR5C6L2NLDc1RC65RDL2FDc4DHR2FC65D0BL4Fc9RDLFC65GC15REF"
DIM MAN2L(1 TO 26): GET (30, 0)-(39, 9), MAN2L
DRAW "BM40,0BR3C6R2Dc64ngc1L2RC65GFNEDc4DERL4HC65D0BM+6,+2D0BM-2,+1c9DHLDC65DC15LBR3DRHC65D0"
DIM MAN1D(1 TO 26): GET (40, 0)-(49, 9), MAN1D
DRAW "BM50,0BR5C6L2Dc64nfc1R2LC65FGNHDc4DHLR4EC65D0BM-6,+2D0BM+2,+1c9DERDC65DC15RBL3DLEC65D0"
DIM MAN2D(1 TO 26): GET (50, 0)-(59, 9), MAN2D
DRAW "BM60,0BR3C6R2DC65L2DR2GDc4DERL4HC65D0BM+6,+2D0BM-2,+1c9DHLDC65DC15LBR3DRHC65D0"
DIM MAN1U(1 TO 26): GET (60, 0)-(69, 9), MAN1U
DRAW "BM70,0BR5C6L2DC65R2DL2FDc4DHLR4EC65D0BM-6,+2D0BM+2,+1c9DERDC65DC15RBL3DLEC65D0"
DIM MAN2U(1 TO 26): GET (70, 0)-(79, 9), MAN2U
BOOM1$ = "BM80,0BM+2,+2C7 F4H2E2G4"
IF BOOMERANG = 2 THEN MID$(BOOM1$, 15, 2) = "12"
IF BOOMERANG = 4 THEN MID$(BOOM1$, 15, 2) = "47"
DRAW BOOM1$: DIM BOOM1(1 TO 26): GET (80, 0)-(89, 9), BOOM1
BOOM2$ = "BM90,0BM+4,+2C7 D4U2L2R4"
IF BOOMERANG = 2 THEN MID$(BOOM2$, 15, 2) = "12"
IF BOOMERANG = 4 THEN MID$(BOOM2$, 15, 2) = "32"
DRAW BOOM2$: DIM BOOM2(1 TO 26): GET (90, 0)-(99, 9), BOOM2
DRAW "BM110,0BM+5,+5C40NU3ND3C42NL3NR3NH3NF3C43NE3NG3"
DIM XPLODE(1 TO 26): GET (110, 0)-(119, 9), XPLODE
CLS
GOSUB SETBOUNDS
FILESPEC$ = "CAS6#304.DAT"
GOSUB READBITMAP
DIM bell(1 TO 400)
DEF SEG = VARSEG(bell(1))
BLOAD "bell.pic", VARPTR(bell(1))
DEF SEG
PUT (236, 90), bell, OR

MAX = 60: MAN = MAX: X = 6: Y = 9: FACE$ = "RIGHT"
GOSUB PLACEME
GOSUB LIFEMETER

DALOOP:
DO
PX = 5
IF PX < 19 THEN GOSUB RIGHTME
CLOCK = TIMER + .07
MAGMA = MAGMA + FLOW: PALETTE 44, MAGMA: IF MAGMA >= 60 OR MAGMA <= 35 THEN FLOW = -(FLOW): IF MAN <= INT(MAX / 5) THEN IF SOUND$ <> "MUTE" THEN PLAY "mst255l64o5ff<c"
IF MOVE > 0 THEN GOSUB PLACEME
IF MOVE = 0 THEN FOR DELAY = 1 TO 10: NEXT DELAY: GOTO 10
PRESET (PX, PY), 0
IF FACE$ = "UP" THEN Y = Y - .2
IF FACE$ = "LEFT" THEN X = X - .2
IF FACE$ = "RIGHT" THEN X = X + .2
IF FACE$ = "DOWN" THEN Y = Y + .2
GOSUB STEPME: GOSUB PLACEME: MOVE = MOVE - 1
IF X > INT(X) + .5 THEN PX = INT(X) + 1 ELSE PX = INT(X)
IF Y > INT(Y) + .5 THEN PY = INT(Y) + 1 ELSE PY = INT(Y)
10 PSET (PX, PY), 1
WHILE TIMER < CLOCK: WEND
IF PX = 19 THEN EXIT DO
LOOP
TIME = TIMER + 2: WHILE TIMER < TIME: WEND: GOSUB BOOM
DO
CLOCK = TIMER + .07
MISSILE1:
IF BOOM = 0 THEN GOTO ENDLOOP
IF BPOS = 1 THEN PUT (BX * 10, BY * 10), BOOM1, XOR ELSE PUT (BX * 10, BY * 10), BOOM2, XOR: boomif$ = "on"
IF BDIR = 1 THEN BY = BY - .5: IF BY <= 0 THEN BOOM = 0: GOTO ENDLOOP
IF BDIR = 2 THEN BX = BX - .5: IF BX <= 0 THEN BOOM = 0: GOTO ENDLOOP
IF BDIR = 3 THEN BX = BX + .5: IF BX >= 31 THEN BOOM = 0: GOTO ENDLOOP
IF BDIR = 4 THEN BY = BY + .5: IF BY >= 19 THEN BOOM = 0: GOTO ENDLOOP
BOOM = BOOM - 1: IF BPOS = 1 THEN BPOS = 2 ELSE BPOS = 1
IF BPOS = 1 THEN PUT (BX * 10, BY * 10), BOOM1, XOR ELSE PUT (BX * 10, BY * 10), BOOM2, XOR
IF BX > INT(BX) + .5 THEN BPX = INT(BX) + 1 ELSE BPX = INT(BX)
IF BY > INT(BY) + .5 THEN BPY = INT(BY) + 1 ELSE BPY = INT(BY)
IF BOOM = 0 AND BPOS = 1 THEN PUT (BX * 10, BY * 10), BOOM1, XOR: boomif$ = "on"
IF BOOM = 0 AND BPOS = 2 THEN PUT (BX * 10, BY * 10), BOOM2, XOR: boomif$ = "on"
ENDLOOP:
WHILE TIMER < CLOCK: WEND
IF BOOM = 0 THEN EXIT DO
LOOP
PLAY PRELUDE$
TIME = TIMER + 2: WHILE TIMER < TIME: WEND
FOR LINEZ = 0 TO 199
LINE (0, LINEZ)-(319, LINEZ), 0
NEXT LINEZ
COLOR 43
RESTORE 100
READ Q$: PLAY Q$
LOCATE 3, 1: PRINT "At the pealing of the great bell,"
READ Q$: PLAY Q$
LOCATE 5, 1: PRINT "the land's terrible curtain of evil"
READ Q$: PLAY Q$
LOCATE 7, 1: PRINT "is quickly lifted. As the citizens"
READ Q$: PLAY Q$
LOCATE 9, 1: PRINT "of Tiwarel rejoice over the hope of"
READ Q$: PLAY Q$
LOCATE 11, 1: PRINT "national peace, the children gather"
READ Q$: PLAY Q$
LOCATE 13, 1: PRINT "around a new hero:"
READ Q$: PLAY Q$
COLOR 9
LOCATE 15, 1: PRINT NAME$; " the Wizard!"
C = 31
DO
C = C + 1: IF C = 44 THEN C = 32
COLOR C: LOCATE 15, 1: PRINT NAME$; " the Wizard!"
LOOP UNTIL INKEY$ <> ""
CLS
GOSUB SETBOUNDS
FILESPEC$ = "OUT0#709.DAT": GOSUB READBITMAP
MAX = 60: MAN = 60: GOSUB LIFEMETER
PUT (210, 110), GEEZER, XOR: PUT (210, 110), MAN1D, XOR
PUT (190, 100), KID, OR: PUT (200, 100), KID, OR: PUT (200, 110), GRASS, XOR: PUT (200, 110), KID, OR: PUT (210, 120), KID, OR: PUT (220, 110), KID, OR
DO
TIME = TIMER + .2: WHILE TIMER < TIME: WEND
PUT (210, 110), MAN1D, XOR
PUT (210, 110), MAN2D, XOR
TIME = TIMER + .2: WHILE TIMER < TIME: WEND
PUT (210, 110), MAN2D, XOR
PUT (210, 110), MAN1D, XOR
LOOP UNTIL INKEY$ <> ""
CLS
RESTORE 200

DO
READ CREDIT$
IF CREDIT$ = "FINISH" THEN EXIT DO
JUSTIFY = 20 - (LEN(CREDIT$) / 2)
FOR CREDLINE = 31 TO 16 STEP -1
PALETTE 255, 60 - (60 - (CREDLINE - 16) * 4)
COLOR 255
LOCATE CREDLINE - 9, JUSTIFY
PRINT CREDIT$
TIME = TIMER + .15: WHILE TIMER < TIME: WEND
LOCATE CREDLINE - 9, JUSTIFY
COLOR 0: PRINT CREDIT$
NEXT CREDLINE
LOOP UNTIL CREDIT$ = "FINISH"
CHAIN "LOSE.SEQ"





BOOM:
IF boomif$ = "on" THEN IF BOOM <> 0 AND BPOS = 1 THEN PUT (BX * 10, BY * 10), BOOM1, XOR: BOOM = 0
IF boomif$ = "on" THEN IF BOOM <> 0 AND BPOS = 2 THEN PUT (BX * 10, BY * 10), BOOM2, XOR: BOOM = 0
IF boomif$ = "off" AND BOOM = 1 THEN BOOM = 0
boomif$ = "off"
KEY(0) STOP
BX = X: BY = Y
IF FACE$ = "RIGHT" THEN BX = X + .2: BDIR = 3
BOOM = 9: BPOS = 1
PUT (BX * 10, BY * 10), BOOM1, XOR
boomif$ = "on"
PLAY BOOM$
PX = 4
RETURN


RIGHTME:                                        'I MOVE RIGHT.
IF MOVE <> 0 THEN RETURN
IF FACE$ <> "RIGHT" THEN GOSUB PLACEME: FACE$ = "RIGHT": GOSUB PLACEME: RETURN
IF POINT(PX + 1, PY) = 2 OR POINT(PX + 1, PY) = 3 OR POINT(PX + 1, PY) = 7 THEN RETURN
KEY(0) STOP
GOSUB PLACEME
MOVE = 5
GOSUB PLACEME
RETURN

STEPME:                                         'I STEP.
IF STEPS = 1 THEN STEPS = 2: RETURN
IF STEPS = 2 THEN STEPS = 1: RETURN
PLACEME:                                        'PLACE MY IMAGE.
IF FACE$ = "UP" AND STEPS = 1 THEN PUT (X * 10, Y * 10), MAN1U, XOR
IF FACE$ = "UP" AND STEPS = 2 THEN PUT (X * 10, Y * 10), MAN2U, XOR
IF FACE$ = "LEFT" AND STEPS = 1 THEN PUT (X * 10, Y * 10), MAN1L, XOR
IF FACE$ = "LEFT" AND STEPS = 2 THEN PUT (X * 10, Y * 10), MAN2L, XOR
IF FACE$ = "RIGHT" AND STEPS = 1 THEN PUT (X * 10, Y * 10), MAN1R, XOR
IF FACE$ = "RIGHT" AND STEPS = 2 THEN PUT (X * 10, Y * 10), MAN2R, XOR
IF FACE$ = "DOWN" AND STEPS = 1 THEN PUT (X * 10, Y * 10), MAN1D, XOR
IF FACE$ = "DOWN" AND STEPS = 2 THEN PUT (X * 10, Y * 10), MAN2D, XOR
RETURN


LIFEMETER:
IF MAN > MAX THEN MAN = MAX
IF MAN <= 0 THEN MAN = 0
IF MAN > 0 AND METER$ = "ITEM" THEN RETURN
LINE (0, 65)-(30, 199), 0, BF
DRAW "BM11,68C4D4R2BR2R2LU4NLRBR2NR2D2NR2D2BR4NR2U2NR2U2NR2"
IF MAN <= INT(MAX / 5) THEN DRAW "BM11,68C44D4R2BR2R2LU4NLRBR2NR2D2NR2D2BR4NR2U2NR2U2NR2"
LINE (17, 75)-(19, 75 + (MAX * 2)), 15, BF
LINE (18, 75)-(18, 75 + (MAN * 2)), 4
IF MAN <= 0 THEN LINE (X * 10, Y * 10)-STEP(9, 9), 0, BF: PUT (X * 10, Y * 10), MAN1D, OR: TIME = TIMER + 3: WHILE TIMER < TIME: WEND: CHAIN "LOSE.SEQ"
RETURN

SETBOUNDS:
LINE (36, 0)-(36, 199), 23                      '
LINE (37, 0)-(37, 199), 25
LINE (38, 0)-(39, 199), 27, BF
LINE (40, 0)-(40, 199), 25
LINE (41, 0)-(41, 199), 23
LINE (0, 25)-(36, 25), 23                       '
LINE (0, 26)-(37, 26), 25
LINE (0, 27)-(38, 28), 27, BF
LINE (0, 29)-(37, 29), 25
LINE (0, 30)-(36, 30), 23
LINE (0, 55)-(36, 55), 23                       '
LINE (0, 56)-(37, 56), 25
LINE (0, 57)-(38, 58), 27, BF
LINE (0, 59)-(37, 59), 25
LINE (0, 60)-(36, 60), 23
LINE (36, 0)-(319, 0), 23                       '
LINE (37, 1)-(319, 1), 25
LINE (39, 2)-(319, 3), 27, BF
LINE (40, 4)-(319, 4), 25
LINE (41, 5)-(319, 5), 23
LINE (41, 194)-(319, 194), 23                       '
LINE (40, 195)-(319, 195), 25
LINE (39, 196)-(319, 197), 27, BF
LINE (37, 198)-(319, 198), 25
LINE (36, 199)-(319, 199), 23
LINE (314, 5)-(314, 194), 23                      '
LINE (315, 4)-(315, 195), 25
LINE (316, 2)-(317, 197), 27, BF
LINE (318, 1)-(318, 198), 25
LINE (319, 0)-(319, 199), 23
DISPLAYBOOM:
PUT (14, 42), BOOM1, OR
DISPLAY$ = "BM6,36CxxD4E2F2U4BR2NR2D2NR2D2R2BR2U3EFDNLD2BR2U4RFDNLBU2BR3GD2FEU2BUBR2ND4F3DU4"
MID$(DISPLAY$, 8, 2) = MID$(BOOM2$, 15, 2): DRAW DISPLAY$
RETURN

READBITMAP:
OPEN FILESPEC$ FOR INPUT AS #1
INPUT #1, LOADED: INPUT #1, LOADED
LINE (5, 1)-(30, 18), 16, B
LINE (6, 2)-(29, 17), 0, BF
FOR ROW = 6 TO 29
IF EOF(1) = 1 THEN EXIT FOR
FOR COLUMN = 2 TO 17
IF EOF(1) = 1 THEN EXIT FOR
IF EOF(1) = 0 THEN INPUT #1, LOADED
IF LOADED = 1 THEN PUT (ROW * 10, COLUMN * 10), BRICKWALL, OR
IF LOADED = 2 THEN PUT (ROW * 10, COLUMN * 10), BLOCK, OR
IF LOADED = 3 THEN PUT (ROW * 10, COLUMN * 10), PILLAR, OR
IF LOADED = 4 THEN PUT (ROW * 10, COLUMN * 10), STATUE, OR
IF LOADED = 7 THEN PUT (ROW * 10, COLUMN * 10), TREE, OR
IF LOADED = 8 THEN PUT (ROW * 10, COLUMN * 10), DOOR, OR
IF LOADED = 9 THEN PUT (ROW * 10, COLUMN * 10), ROCK, OR
IF LOADED = 10 THEN PUT (ROW * 10, COLUMN * 10), DOOR, OR
IF LOADED = 12 THEN PUT (ROW * 10, COLUMN * 10), GRASS, OR
IF LOADED = 15 AND CASTLE = 0 THEN PUT (ROW * 10, COLUMN * 10), SIGN, OR
IF LOADED = 16 THEN PUT (ROW * 10, COLUMN * 10), MOUNT, OR
IF LOADED = 21 THEN PUT (ROW * 10, COLUMN * 10), SHRUB, OR
IF LOADED = 22 THEN PUT (ROW * 10, COLUMN * 10), WATER, OR
IF LOADED = 23 THEN PUT (ROW * 10, COLUMN * 10), LAVA, OR
IF LOADED = 29 THEN PUT (ROW * 10, COLUMN * 10), MAN, OR
IF LOADED = 30 THEN PUT (ROW * 10, COLUMN * 10), LADY, OR
IF LOADED = 31 THEN PUT (ROW * 10, COLUMN * 10), GEEZER, OR
IF LOADED = 32 THEN PUT (ROW * 10, COLUMN * 10), MERCHANT, OR
IF LOADED = 34 THEN PUT (ROW * 10, COLUMN * 10), BEACHUL, OR
IF LOADED = 35 THEN PUT (ROW * 10, COLUMN * 10), BEACHUR, OR
IF LOADED = 36 THEN PUT (ROW * 10, COLUMN * 10), BEACHDL, OR
IF LOADED = 37 THEN PUT (ROW * 10, COLUMN * 10), BEACHDR, OR
IF LOADED = 38 THEN PUT (ROW * 10, COLUMN * 10), KID, OR
NEXT COLUMN
NEXT ROW
CLOSE #1
RETURN


100 DATA T200MNO4L4C<G>C<,G>GL8FEDED<G>ED,L2C<<L4EDCL2G,>GL4C<G>C<G>GL8F,EDED<G>L4EB>L1C,L4C<G>C<G>GL8FE,DED<G>L4EB>L1C
200  _
DATA "-* C R E D I T S *-","STORY BY: Fresh","PROGRAMMING BY: Fresh","GRAPHICS BY: Fresh","MUSIC & SOUND EFFECTS BY: Fresh","TESTING BY: Teresa and Susan Nagel","QUALITY ASSURANCE BY: Rich Carlisle","This has been a Demosoft production.","FINISH"

