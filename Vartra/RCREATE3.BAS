COMMON PROGRESS$, SPEED, BOOMERANG, MAX, MAN, ROOM, CASTLE, X, Y, PX, PY, FACE$, STEPS, MONEY, KEYS, ITEM$
'INPUT "WHAT IS THE PASSWORD"; PASSWORD$
'IF PASSWORD$ <> "freshishot" THEN CLS : SYSTEM
SCREEN 13: CLS
ROOM = 100
VALUE = 1

INPUT "WHICH CASTLE"; CASTLE
CLS
IF CASTLE = 1 THEN SCOLOR1$ = "010": SCOLOR2$ = "002": SCOLOR3$ = "120"
IF CASTLE = 2 THEN SCOLOR1$ = "032": SCOLOR2$ = "001": SCOLOR3$ = "105"
IF CASTLE = 3 THEN SCOLOR1$ = "038": SCOLOR2$ = "004": SCOLOR3$ = "110"
IF CASTLE = 4 THEN SCOLOR1$ = "036": SCOLOR2$ = "035": SCOLOR3$ = "034"
IF CASTLE = 5 THEN SCOLOR1$ = "029": SCOLOR2$ = "028": SCOLOR3$ = "026"
IF CASTLE = 6 THEN SCOLOR1$ = "014": SCOLOR2$ = "043": SCOLOR3$ = "042"
IF CASTLE = 0 OR CASTLE > 6 THEN SCOLOR1$ = "024": SCOLOR2$ = "022": SCOLOR3$ = "020"

X = 6: Y = 2
BLOCK$ = "BM0,30CxxxF9BL9E9G3L3D3R3U4CxxxL3HR5EL7GD7EU5FD3FCxxxR3FL5GR7EU7GD5HU3"
PILLAR$ = "BM10,30BM+3,+7CxxxGDR5UHGLEU6FEUL5DFEBLCxxxD0BR3D0BD7D0BL3D0EU5BM+2,-1CxxxD0BD7D0"
DOOR$ = "BM20,30BR2CxxxR4F2D7BL8U7EBM+2,+4DBR2ULCxxxU4D8BM+3,-1D0BU5D0BL6D0BD5DCxxxR2ULHR2HLURHR2ULHR2ULBR3RGR2GLDR2DLDRDL2DRGR2CxxxBR2U9GULBL6LDCxxxURBR6CxxxRDBM+1,+4D3"
BRICKWALL$ = "BM30,30CxxxR9D9L9U9BFPxxx,xxxCxxxHR3L3D2BM+9,+3L3D2EBM-7,-2CxxxR9NU4L4D5NL5R4"
STAIRCASE$ = "BM40,30CxxxR9D9L9U9BFCxxxRND7FRND6FRND5FRD4CxxxBLNU3BL2NU4BL2NU5BL2U6"
STATUE$ = "BM10,30BRCxxxFDLE2R3FNEFLBL2LUCxxxRF2LDL3ULEUCxxxD0BR3D0BG2R"
ROCK$ = "BM50,30BD2CxxxE2R5F2D5G2L5H2U5BRPxxx,xxxCxxxD0BR2FDBM-2,+1FBR4GNLBU3D0BM+1,-2U"
TOMB$ = "BM60,30BR4C24RF3D3FD2L9U2EU3E2BD6NLR4BUP24,24BD2P22,24BH3BDC20U4GR3C22NHGD2"
LOCK$ = "BM70,30BR3CxxxR3FD3BL5NU3DCxxxLD4R7U4L6D3R5U2L4DR2NRCxxxDHURBM+1,-2U3L3D3"
BARRIER$ = "BM80,30BDCxxxNR9BD3NR9BD3NR9DCxxxNR9BU3NR9BU3NR9BM+1,-2ND9BR3ND9BR3ND9BRCxxxND9BL3ND9BL3ND9"
TREE$ = "BM90,30C117BFBDER5L2DRFEDL5ULGFR3BR2RGL2FBM-5,-1FEDRDC112D2LR3LU2"
GRASS$ = "BM100,30C117bf2dbf2dbf2dc116bm-5,-1ubm+4,-5ubf3d"
MOUNT$ = "BM110,30C21R9D9L9U8BRP21,21EC20F2DFBL3GHBD5EBM+3,-1FDBR2E2BM-2,-4UHE"
MOUNTL$ = "BM120,30C21R9D9L7H2U6BRP21,21EC20F2DFBL3GHBD5BEBM+3,-1FDBR2E2BM-2,-4UHE"
MOUNTR$ = "BM130,30C21R9D7G2L7U8BRP21,21EC20F2DFBL3GHBD5EBM+3,-1FDBR2E2BM-2,-4UHE"
MOUNTT$ = "BM140,30C21R9D9L9U8BRP21,21HC0DED2FU3RBR2DFU2R3DL2FRG2C20D0BM+2,+3D0BL2H3EBD2G3NDBH2EBM-1,-3C22D0BM+3,-1EDFBR2D0"
LADDER$ = "BM150,30C22D9BR9U9BLC21D9BL7U9BDC20NR7BD5NR7"
CAVE$ = "BM160,30C18R9D9L9U8BRP18,18BHC22BD9U3RU2HU2EFUR3ND3F2U2R2DBM-3,-1C21D0BL6D0BD4D"
SIGN$ = "BM170,30BM+4,+9C6U5C7NL2R2UL4R2UC6D0"
MONUMENT$ = "BM180,30CxxxBD9U7END8RUR4F2D7L6BM+1,-2Pxxx,xxxCxxxRBR2D0BU2HGHBU2R3BM+1,+7CxxxL5"
CHEST$ = "BM190,30BD4C43D3F2U3NHD3R6U3NL5U1H2L5BDP4,43BD3P4,43BR2P4,43BR2C8D0"
SHRUBS$ = "BM200,30BDC190D2RNU3RNU3RNU3RNU2F2D2NU4RNU4RNU4EU3C118ULULDLUGDGNL3FNL5DNL5DNL5GL3FC112RBM+3,-1R"
WATER$ = "BM210,30C1D9R9U9L8BDP1,1BHC55RFRFRFRFRBU4NLBD8LHLHLHLHLBD4RFRBR4C9LHLHLHLBU4RFRFRFRFRBU4LHLHL"
CAVEWALL$ = "BM220,30C114R9D9L9U8BRP114,114EC19F2DFBL3GHBD5EBM+3,-1FDBR2E2BM-2,-4UHE"
LAVA$ = "BM230,30C42D9R9U9L8BDP42,42BHC43RFRFRFRFRBU4NLBD8LHLHLHLHLBD4RFRBR4C44LHLHLHLBU4RFRFRFRFRBU4LHLHL"
MAN$ = "BM240,30BR3C6NDR3GC9LC65GR2GRC1RFL6ERD2R2DC8NL2DBL2D2LBR4LUC7D0BL2D0BM-2,-3C65D0BR6D0"
LADY$ = "BM250,30BR3C6RFL2GDEC1R2GC64UC65GFEFC5D0BL4DC65D0BR4DC15D0BL4RC5R2UC13UGLUBD3R2FL4DR4BLC5D0BL2D0"
GEEZER$ = "BM260,30BR3C65NGR2NGFGL2FBLC7DRDEUBU2C8D0BL2D0BD4C6L2URUBR4FDHDLFC8L4BD3LR2BR2R2HC6L4UR4GC65D0BL2D0BH2D0BM+7,-2D3C8U2BU2EUL"
MERCHANT$ = "BM270,30BF2C8URUR3FLC7L2BG2D0BBM+2,-1C1D0BR2DC65HDLBG3D0BR7UC2L7ENR5BM+1,+2R3BD3C8R2HBL4GR2UC5ULBR4NGNLBH2NENH"
MONSTER$ = "BM120,6BM+3,+2C2FRNEDLD3GNHERFDRH2UC8NLUC2RC4EC15EBM-6,+2C6RDL"
INCAVE$ = "BM280,30C1R9D9L9U8BRP1,1BHC114BD9U3RU2HU2EFUR3ND3F2U2R2DBM-3,-1C19D0BL6D0BD4D"
BEACHUL$ = "BM290,30C1D9R9U9L8BDP1,1BHC55RFRFRFRFRBU4NLBD8LHLHLHLHLBD4RFRBR4C9LHLHLHLBU4RFRFRFRFRBU4LHLHLC0L2DHND2LD4"
BEACHUR$ = "BM300,30C1D9R9U9L8BDP1,1BHC55RFRFRFRFRBU4NLBD8LHLHLHLHLBD4RFRBR4C9LHLHLHLBU4RFRFRFRFRBU4LHLHLBRC0R4DNL2DNLD2"
BEACHDL$ = "BM310,30C1D9R9U9L8BDP1,1BHC55RFRFRFRFRBU4NLBD8LHLHLHLHLBD4RFRBR4C9LHLHLHLBU4RFRFRFRFRBU4LHLHLBM-4,+5C0D4RNU2RNUR2"
BEACHDR$ = "BM0,40C1D9R9U9L8BDP1,1BHC55RFRFRFRFRBU4NLBD8LHLHLHLHLBD4RFRBR4C9LHLHLHLBU4RFRFRFRFRBU4LHLHLBM+1,+9C0R4UNL2UNLU2"
KID$ = "BM10,40BM+3,+2C6R2DC1L2RC65DNLRFDL4UC12NR4FR2G2C7UR2D2C8NRBL2L"
GOLDBLOCK$ = "BM20,40C43F9BL9E9G3L3D3R3U4C14L3HR5EL7GD7EU5FD3FC42R3FL5GR7EU7GD5HU3"
GOLDPILLAR$ = "BM30,40BM+3,+7C43GDR5UHGLEU6FEUL5DFEBLC14D0BR3D0BD7D0BL3D0EU5BM+2,-1C42D0BD7D0"
GOLDDOOR$ = "BM40,40BR2C42R4F2D7BL8U7EBM+2,+4DBR2ULC43U4D8BM+3,-1D0BU5D0BL6D0BD5DC14R2ULHR2HLURHR2ULHR2ULBR3RGR2GLDR2DLDRDL2DRGR2C42BR2U9GULBL6LDC14URBR6C43RDBM+1,+4D3"
GOLDBRICK$ = "BM50,40C43R9D9L9U9BFP43,43C14HR3L3D2BM+9,+3L3D2EBM-7,-2C42R9NU4L4D5NL5R4"
GOLDSTATUE$ = "BM30,40BRC42FDLE2R3FNEFLBL2LUC43RF2LDL3ULEUC14D0BR3D0BG2R"

LINE (100, 100)-(109, 109), 15, BF
DIM SQUARE(1 TO 100): GET (100, 100)-(109, 109), SQUARE
DRAW MONSTER$

DIM TILE(1 TO 100)
DIM MONSTER(1 TO 26): GET (120, 6)-(129, 15), MONSTER
MID$(BLOCK$, 8, 3) = SCOLOR2$: MID$(BLOCK$, 29, 3) = SCOLOR1$: MID$(BLOCK$, 51, 3) = SCOLOR3$
MID$(PILLAR$, 16, 3) = SCOLOR2$: MID$(PILLAR$, 41, 3) = SCOLOR1$: MID$(PILLAR$, 72, 3) = SCOLOR3$
MID$(DOOR$, 12, 3) = SCOLOR3$: MID$(DOOR$, 41, 3) = SCOLOR2$: MID$(DOOR$, 72, 3) = SCOLOR1$: MID$(DOOR$, 121, 3) = SCOLOR3$: MID$(DOOR$, 138, 3) = SCOLOR1$: MID$(DOOR$, 147, 3) = SCOLOR2$
MID$(BRICKWALL$, 9, 3) = SCOLOR2$: MID$(BRICKWALL$, 23, 3) = SCOLOR2$: MID$(BRICKWALL$, 27, 3) = SCOLOR2$: MID$(BRICKWALL$, 31, 3) = SCOLOR1$: MID$(BRICKWALL$, 61, 3) = SCOLOR3$
MID$(STAIRCASE$, 9, 3) = SCOLOR3$: MID$(STAIRCASE$, 23, 3) = SCOLOR2$: MID$(STAIRCASE$, 45, 3) = SCOLOR1$
MID$(STATUE$, 11, 3) = SCOLOR3$: MID$(STATUE$, 32, 3) = SCOLOR2$: MID$(STATUE$, 47, 3) = SCOLOR1$
MID$(ROCK$, 12, 3) = SCOLOR2$: MID$(ROCK$, 34, 3) = SCOLOR1$: MID$(ROCK$, 38, 3) = SCOLOR2$: MID$(ROCK$, 42, 3) = SCOLOR3$
MID$(LOCK$, 12, 3) = SCOLOR1$: MID$(LOCK$, 28, 3) = SCOLOR2$: MID$(LOCK$, 54, 3) = SCOLOR3$
MID$(BARRIER$, 11, 3) = SCOLOR3$: MID$(BARRIER$, 31, 3) = SCOLOR1$: MID$(BARRIER$, 74, 3) = SCOLOR2$
MID$(MONUMENT$, 10, 3) = SCOLOR2$: MID$(MONUMENT$, 40, 3) = SCOLOR1$: MID$(MONUMENT$, 44, 3) = SCOLOR2$: MID$(MONUMENT$, 48, 3) = SCOLOR3$: MID$(MONUMENT$, 76, 3) = SCOLOR1$

DRAW BLOCK$
DRAW PILLAR$
DRAW DOOR$
DRAW BRICKWALL$
DRAW STAIRCASE$
DRAW ROCK$
DRAW TOMB$
DRAW LOCK$
DRAW BARRIER$
DRAW TREE$
DRAW GRASS$
DRAW MOUNT$
DRAW MOUNTL$
DRAW MOUNTR$
DRAW MOUNTT$
DRAW LADDER$
DRAW CAVE$
DRAW SIGN$
DRAW MONUMENT$
DRAW CHEST$
DRAW SHRUBS$
DRAW WATER$
DRAW CAVEWALL$
DRAW LAVA$
DRAW MAN$
DRAW LADY$
DRAW GEEZER$
DRAW MERCHANT$
DRAW INCAVE$
DRAW BEACHUL$
DRAW BEACHUR$
DRAW BEACHDL$
DRAW BEACHDR$
DRAW KID$
DRAW GOLDBRICK$
DRAW GOLDPILLAR$
DRAW GOLDBLOCK$
DRAW GOLDDOOR$
DIM BLOCK(1 TO 26): GET (0, 30)-(9, 39), BLOCK
DIM PILLAR(1 TO 26): GET (10, 30)-(19, 39), PILLAR
DRAW STATUE$
DIM DOOR(1 TO 26): GET (20, 30)-(29, 39), DOOR
DIM BRICKWALL(1 TO 26): GET (30, 30)-(39, 39), BRICKWALL
DIM STAIRCASE(1 TO 26): GET (40, 30)-(49, 39), STAIRCASE
DIM STATUE(1 TO 26): GET (10, 30)-(19, 39), STATUE
DIM ROCK(1 TO 26): GET (50, 30)-(59, 39), ROCK
DIM TOMB(1 TO 26): GET (60, 30)-(69, 39), TOMB
DIM KEYLOCK(1 TO 26): GET (70, 30)-(79, 39), KEYLOCK
DIM BARRIER(1 TO 26): GET (80, 30)-(89, 39), BARRIER
DIM TREE(1 TO 26): GET (90, 30)-(99, 39), TREE
DIM GRASS(1 TO 26): GET (100, 30)-(109, 39), GRASS
DIM MOUNT(1 TO 26): GET (110, 30)-(119, 39), MOUNT
DIM MOUNTL(1 TO 26): GET (120, 30)-(129, 39), MOUNTL
DIM MOUNTR(1 TO 26): GET (130, 30)-(139, 39), MOUNTR
DIM MOUNTT(1 TO 26): GET (140, 30)-(149, 39), MOUNTT
DIM LADDER(1 TO 26): GET (150, 30)-(159, 39), LADDER
DIM CAVE(1 TO 26): GET (160, 30)-(169, 39), CAVE
DIM SIGN(1 TO 26): GET (170, 30)-(179, 39), SIGN
DIM MONUMENT(1 TO 26): GET (180, 30)-(189, 39), MONUMENT
DIM CHEST(1 TO 26): GET (190, 30)-(199, 39), CHEST
DIM SHRUB(1 TO 26): GET (200, 30)-(209, 39), SHRUB
DIM WATER(1 TO 26): GET (210, 30)-(219, 39), WATER
DIM CAVEWALL(1 TO 26): GET (220, 30)-(229, 39), CAVEWALL
DIM LAVA(1 TO 26): GET (230, 30)-(239, 39), LAVA
DIM MAN(1 TO 26): GET (240, 30)-(249, 39), MAN
DIM LADY(1 TO 26): GET (250, 30)-(259, 39), LADY
DIM GEEZER(1 TO 26): GET (260, 30)-(269, 39), GEEZER
DIM MERCHANT(1 TO 26): GET (270, 30)-(279, 39), MERCHANT
DIM INCAVE(1 TO 26): GET (280, 30)-(289, 39), INCAVE
DIM BEACHUL(1 TO 26): GET (290, 30)-(299, 39), BEACHUL
DIM BEACHUR(1 TO 26): GET (300, 30)-(309, 39), BEACHUR
DIM BEACHDL(1 TO 26): GET (310, 30)-(319, 39), BEACHDL
DIM BEACHDR(1 TO 26): GET (0, 40)-(9, 49), BEACHDR
DIM KID(1 TO 26): GET (10, 40)-(19, 49), KID
DIM GOLDBLOCK(1 TO 26): GET (20, 40)-(29, 49), GOLDBLOCK
DIM GOLDPILLAR(1 TO 26): GET (30, 40)-(39, 49), GOLDPILLAR
DRAW GOLDSTATUE$
DIM GOLDDOOR(1 TO 26): GET (40, 40)-(49, 49), GOLDDOOR
DIM GOLDBRICK(1 TO 26): GET (50, 40)-(59, 49), GOLDBRICK
DIM GOLDSTATUE(1 TO 26): GET (30, 40)-(39, 49), GOLDSTATUE

DRAW "BM180,0BM+3,+2C5GD2F3E3U2HLGHBGP4,5"
DIM HEART(1 TO 26): GET (180, 0)-(189, 9), HEART
DRAW "BM110,0BM+5,+5C40NU3ND3C42NL3NR3NH3NF3C43NE3NG3"
DIM XPLODE(1 TO 26): GET (110, 0)-(119, 9), XPLODE
DRAW "BM160,0BM+1,+2C14ND2R2DGRER2NDR2DLC42D0BM-5,-1D0"
DIM LOCKKEY(1 TO 26): GET (160, 0)-(169, 9), LOCKKEY
DRAW "BM170,0BM+2,+3C42ND2ER2BD2GLC43DR2URU2L3DR"
DIM COIN(1 TO 26): GET (170, 0)-(179, 9), COIN

SCREEN 12: CLS
PRINT : PRINT : COLOR 10: PRINT "Room Creator 2.0  (Advanced Tile System)": COLOR 7
5 PRINT : PRINT "ARROW KEYS MOVE PIXEL."
PRINT "[SPACE BAR] CREATE TILE"
PRINT "[CTRL] SWITCH ROOM VERTICALLY"
PRINT "[ALT] SWITCH ROOM HORIZONTALLY"
PRINT "[F1] ERASE"
PRINT "[F2] SPRINKLE TILES RANDOMLY"
PRINT "[F3] SAVE ROOM IN ASCII FILE"
PRINT "[F4] RECALL ROOM FROM ASCII FILE"
PRINT "[F5] SCROLL TILE ."
PRINT "[F6] SCROLL TILE ."
PRINT "[F7] COPY TILE"
PRINT "[F8] TOGGLE MOVE/DRAW MODE"
PRINT "[F10] CLEAR SCREEN"
PRINT "[F11] LOAD CASTLE ROOM MATRIX"
PRINT "[F12] RESELECT CASTLE"
PRINT "[ESC] EXIT."
PRINT : PRINT "PRESS ANY KEY TO CONTINUE..."
10 IF INKEY$ = "" THEN GOTO 10
11 CLS
KEY 15, CHR$(&H0) + CHR$(&H39)
KEY 16, CHR$(&H0) + CHR$(&H38)
KEY 17, CHR$(&H0) + CHR$(&H1D)
KEY 18, CHR$(128) + CHR$(72)
KEY 19, CHR$(128) + CHR$(75)
KEY 20, CHR$(128) + CHR$(77)
KEY 21, CHR$(128) + CHR$(80)
ON KEY(18) GOSUB UP
ON KEY(19) GOSUB LEFT
ON KEY(20) GOSUB RIGHT
ON KEY(21) GOSUB DOWN

ON KEY(1) GOSUB ERASER
ON KEY(2) GOSUB SPRINKLE
ON KEY(3) GOSUB SAVEGRAPHIC
ON KEY(4) GOSUB LOADGRAPHIC
ON KEY(5) GOSUB SCROLLDOWN
ON KEY(6) GOSUB SCROLLUP
ON KEY(7) GOSUB COPY
ON KEY(8) GOSUB TOGGLE
ON KEY(15) GOSUB TILE
ON KEY(16) GOSUB SWITCHROOM
ON KEY(17) GOSUB COLUMNSWITCH
ON KEY(10) GOSUB CLEARSCREEN
ON KEY(30) GOSUB MATRIX
ON KEY(31) GOSUB RESELECT

SCREEN 13
CLS
GOSUB SETBOUNDS
COL = 11
IF VALUE = 1 THEN PUT (13, 38), BRICKWALL, XOR
GOSUB SCAN
PSET (3, 66), 12
LOCATE 12, 1: PRINT STR$(ROOM)
MODE = 1: GOSUB TOGGLE

REM ******************************************************** MAIN LOOP START
DO
KEY(0) ON: FOR CHANCE = 1 TO 1: NEXT CHANCE: KEY(0) STOP
PUT (X * 10, Y * 10), SQUARE, XOR
PUT (X * 10, Y * 10), SQUARE, XOR
LOOP UNTIL INKEY$ = ""
REM ********************************************************** MAIN LOOP END

CLS : SYSTEM

SPRINKLE:
KEY(0) OFF
FOR HANDFUL = 1 TO 5
RANDOMIZE TIMER
SH = INT(RND * 24) + 6
SV = INT(RND * 16) + 2
IF POINT(SH, SV) = 0 THEN PSET (SH, SV), VALUE: GET (13, 38)-(22, 47), TILE: PUT (SH * 10, SV * 10), TILE, OR
NEXT HANDFUL
RETURN


ERASER:
KEY(0) OFF
PSET (X, Y), 0: LINE (X * 10, Y * 10)-STEP(9, 9), 0, BF
RETURN
CLEARSCREEN:
KEY(0) OFF
LINE (50, 10)-(309, 189), 0, BF
LINE (5, 1)-(30, 18), 0, BF
RETURN

SAVEGRAPHIC:
KEY(0) OFF
GOSUB SCREEN4SCENE
GOSUB WINDOWS
OPEN FILESPEC$ FOR OUTPUT AS #1
PRINT #1, UCASE$(MONSTER$)
PRINT #1, NUMBER
FOR ROW = 6 TO 29
FOR COLUMN = 2 TO 17
PRINT #1, POINT(ROW, COLUMN)
NEXT COLUMN
NEXT ROW
CLOSE #1
RETURN

MATRIX:
KEY(0) OFF
RESERVE$ = FILESPEC$
FILESPEC$ = "MATRIX.DAT"
GOSUB MATRIX2
FILESPEC$ = RESERVE$
RETURN

LOADGRAPHIC:
KEY(0) OFF
GOSUB SCREEN4SCENE
MATRIX2:
GOSUB CLEARSCREEN: GOSUB SETBOUNDS: GOSUB READBITMAP
RETURN

SCROLLUP:
KEY(0) OFF
GOSUB LOOKUP
VALUE = VALUE + 1: IF VALUE = 44 THEN VALUE = 0
GOSUB LOOKUP
RETURN
SCROLLDOWN:
KEY(0) OFF
GOSUB LOOKUP
VALUE = VALUE - 1: IF VALUE = -1 THEN VALUE = 43
GOSUB LOOKUP
RETURN

UP:
KEY(0) OFF
Y = Y - 1: IF Y < 2 THEN Y = 2
GOSUB CALLPOS
RETURN
LEFT:
KEY(0) OFF
X = X - 1: IF X < 6 THEN X = 6
GOSUB CALLPOS
RETURN
RIGHT:
KEY(0) OFF
X = X + 1: IF X > 29 THEN X = 29
GOSUB CALLPOS
RETURN
DOWN:
KEY(0) OFF
Y = Y + 1: IF Y > 17 THEN Y = 17
GOSUB CALLPOS
RETURN

CALLPOS:
KEY(0) OFF
LOCATE 18, 1: COLOR 13: PRINT X
LOCATE 19, 1: COLOR 10: PRINT Y
IF MODE = 1 THEN GOSUB TILE
RETURN

COPY:
KEY(0) OFF
GOSUB LOOKUP
VALUE = POINT(X, Y): GET (X * 10, Y * 10)-((X * 10) + 9, (Y * 10) + 9), TILE
PUT (13, 38), TILE, XOR
RETURN

COLUMNSWITCH:
KEY(0) OFF
COLUMNSW = 1
FOR COLUMNSWICH = 0 TO 15
SWITCHROOM:
KEY(0) OFF
PSET (COUNTH + 3, COUNTV + 66), 11
SEARCH:
ROOM = ROOM + 1: COUNTH = COUNTH + 2
IF COUNTH = 32 THEN COUNTH = 0: ROOM = ROOM - 16: IF COLUMNSW = 1 THEN ROOM = ROOM + 100: COUNTV = COUNTV + 2: IF COUNTV >= 15 THEN COUNTV = 0: COUNTH = 0: ROOM = 100
IF POINT(COUNTH + 3, COUNTV + 66) <> 11 THEN GOTO SEARCH
PSET (COUNTH + 3, COUNTV + 66), 12
COLOR 11: LOCATE 12, 1: PRINT STR$(ROOM)
IF COLUMNSW = 0 THEN RETURN
NEXT COLUMNSWICH
COLUMNSW = 0
RETURN

SETBOUNDS:
LINE (36, 0)-(36, 199), 23                      '
LINE (37, 0)-(37, 199), 25
LINE (38, 0)-(39, 199), 27, BF
LINE (40, 0)-(40, 199), 25
LINE (41, 0)-(41, 199), 23
LINE (0, 25)-(36, 25), 23                       '
LINE (0, 26)-(37, 26), 25
LINE (0, 27)-(38, 28), 27, BF
LINE (0, 29)-(37, 29), 25
LINE (0, 30)-(36, 30), 23
LINE (0, 55)-(36, 55), 23                       '
LINE (0, 56)-(37, 56), 25
LINE (0, 57)-(38, 58), 27, BF
LINE (0, 59)-(37, 59), 25
LINE (0, 60)-(36, 60), 23
LINE (36, 0)-(319, 0), 23                       '
LINE (37, 1)-(319, 1), 25
LINE (39, 2)-(319, 3), 27, BF
LINE (40, 4)-(319, 4), 25
LINE (41, 5)-(319, 5), 23
LINE (41, 194)-(319, 194), 23                       '
LINE (40, 195)-(319, 195), 25
LINE (39, 196)-(319, 197), 27, BF
LINE (37, 198)-(319, 198), 25
LINE (36, 199)-(319, 199), 23
LINE (314, 5)-(314, 194), 23                      '
LINE (315, 4)-(315, 195), 25
LINE (316, 2)-(317, 197), 27, BF
LINE (318, 1)-(318, 198), 25
LINE (319, 0)-(319, 199), 23
RETURN

SCAN:
ROOM = ROOM + 1: COUNTH = COUNTH + 2
IF COUNTH = 32 THEN COUNTH = 0: ROOM = (ROOM + 100) - 15: COUNTV = COUNTV + 2: IF COUNTV >= 15 THEN COUNTV = 0: COUNTH = 0: ROOM = 100: GOTO ENDSCAN
FILESPEC$ = "CAS1#999.DAT"
MID$(FILESPEC$, 4, 1) = CHR$(CASTLE + 48)
IF CASTLE = 0 THEN MID$(FILESPEC$, 1, 3) = "OUT"
IF CASTLE > 6 THEN MID$(FILESPEC$, 1, 3) = "CAV"
MID$(FILESPEC$, 6, 3) = MID$((STR$(ROOM)), 2, 3)
PSET (COUNTH + 3, COUNTV + 66), 11
GOTO SCAN
ENDSCAN:
RETURN

SCREEN4SCENE:
KEY(0) OFF
FILESPEC$ = "CAS1#999.DAT"
MID$(FILESPEC$, 4, 1) = CHR$(CASTLE + 48)
IF CASTLE = 0 THEN MID$(FILESPEC$, 1, 3) = "OUT"
IF CASTLE > 6 THEN MID$(FILESPEC$, 1, 3) = "CAV"
MID$(FILESPEC$, 6, 3) = MID$((STR$(ROOM)), 2, 3)
RETURN

READBITMAP:
KEY(0) OFF
LINE (5, 1)-(30, 18), 16, B
LINE (6, 2)-(29, 17), 0, BF
OPEN FILESPEC$ FOR INPUT AS #1
INPUT #1, MONSTER$
INPUT #1, NUMBER
FOR ROW = 6 TO 29
IF EOF(1) = 1 THEN EXIT FOR
FOR COLUMN = 2 TO 17
IF EOF(1) = 1 THEN EXIT FOR
IF EOF(1) = 0 THEN INPUT #1, LOADED
IF EOF(1) = 0 AND LOADED > 0 THEN PRESET (ROW, COLUMN), 0
IF LOADED = 1 THEN PUT (ROW * 10, COLUMN * 10), BRICKWALL, OR: PSET (ROW, COLUMN), 1
IF LOADED = 2 THEN PUT (ROW * 10, COLUMN * 10), BLOCK, OR: PSET (ROW, COLUMN), 2
IF LOADED = 3 THEN PUT (ROW * 10, COLUMN * 10), PILLAR, OR: PSET (ROW, COLUMN), 3
IF LOADED = 4 THEN PUT (ROW * 10, COLUMN * 10), STATUE, OR: PSET (ROW, COLUMN), 4
IF LOADED = 5 THEN PUT (ROW * 10, COLUMN * 10), TOMB, OR: PSET (ROW, COLUMN), 5
IF LOADED = 6 THEN PUT (ROW * 10, COLUMN * 10), BARRIER, OR: PSET (ROW, COLUMN), 6
IF LOADED = 7 THEN PUT (ROW * 10, COLUMN * 10), TREE, OR: PSET (ROW, COLUMN), 7
IF LOADED = 8 THEN PUT (ROW * 10, COLUMN * 10), KEYLOCK, OR: PSET (ROW, COLUMN), 8
IF LOADED = 9 THEN PUT (ROW * 10, COLUMN * 10), ROCK, OR: PSET (ROW, COLUMN), 9
IF LOADED = 10 THEN PUT (ROW * 10, COLUMN * 10), DOOR, OR: PSET (ROW, COLUMN), 10
IF LOADED = 11 THEN PUT (ROW * 10, COLUMN * 10), STAIRCASE, OR: PSET (ROW, COLUMN), 11
IF LOADED = 12 THEN PUT (ROW * 10, COLUMN * 10), GRASS, OR: PSET (ROW, COLUMN), 12
IF LOADED = 13 THEN PUT (ROW * 10, COLUMN * 10), LADDER, OR: PSET (ROW, COLUMN), 13
IF LOADED = 14 AND CASTLE < 7 THEN PUT (ROW * 10, COLUMN * 10), CAVE, OR: PSET (ROW, COLUMN), 14
IF LOADED = 14 AND CASTLE >= 7 THEN PUT (ROW * 10, COLUMN * 10), INCAVE, OR: PSET (ROW, COLUMN), 14
IF LOADED = 15 AND CASTLE = 0 THEN PUT (ROW * 10, COLUMN * 10), SIGN, OR: PSET (ROW, COLUMN), 15
IF LOADED = 15 AND CASTLE > 0 THEN PUT (ROW * 10, COLUMN * 10), MONUMENT, OR: PSET (ROW, COLUMN), 15
IF LOADED = 16 THEN PUT (ROW * 10, COLUMN * 10), MOUNT, OR: PSET (ROW, COLUMN), 16
IF LOADED = 17 THEN PUT (ROW * 10, COLUMN * 10), MOUNTL, OR: PSET (ROW, COLUMN), 17
IF LOADED = 18 THEN PUT (ROW * 10, COLUMN * 10), MOUNTR, OR: PSET (ROW, COLUMN), 18
IF LOADED = 19 THEN PUT (ROW * 10, COLUMN * 10), MOUNTT, OR: PSET (ROW, COLUMN), 19
IF LOADED = 20 THEN PUT (ROW * 10, COLUMN * 10), CHEST, OR: PSET (ROW, COLUMN), 20
IF LOADED = 21 THEN PUT (ROW * 10, COLUMN * 10), SHRUB, OR: PSET (ROW, COLUMN), 21
IF LOADED = 22 THEN PUT (ROW * 10, COLUMN * 10), WATER, OR: PSET (ROW, COLUMN), 22
IF LOADED = 23 THEN PUT (ROW * 10, COLUMN * 10), LAVA, OR: PSET (ROW, COLUMN), 23
IF LOADED = 24 THEN PUT (ROW * 10, COLUMN * 10), HEART, OR: PSET (ROW, COLUMN), 24
IF LOADED = 25 THEN PUT (ROW * 10, COLUMN * 10), LOCKKEY, OR: PSET (ROW, COLUMN), 25
IF LOADED = 26 THEN PUT (ROW * 10, COLUMN * 10), COIN, OR: PSET (ROW, COLUMN), 26
IF LOADED = 27 THEN PSET (ROW, COLUMN), 27
IF LOADED = 28 THEN PUT (ROW * 10, COLUMN * 10), BRICKWALL, OR: PRESET (ROW, COLUMN), 28
IF LOADED = 29 THEN PUT (ROW * 10, COLUMN * 10), MAN, OR: PSET (ROW, COLUMN), 29
IF LOADED = 30 THEN PUT (ROW * 10, COLUMN * 10), LADY, OR: PSET (ROW, COLUMN), 30
IF LOADED = 31 THEN PUT (ROW * 10, COLUMN * 10), GEEZER, OR: PSET (ROW, COLUMN), 31
IF LOADED = 32 THEN PUT (ROW * 10, COLUMN * 10), MERCHANT, OR: PSET (ROW, COLUMN), 32
IF LOADED = 33 THEN PUT (ROW * 10, COLUMN * 10), CAVEWALL, OR: PSET (ROW, COLUMN), 33
IF LOADED = 34 THEN PUT (ROW * 10, COLUMN * 10), BEACHUL, OR: PSET (ROW, COLUMN), 34
IF LOADED = 35 THEN PUT (ROW * 10, COLUMN * 10), BEACHUR, OR: PSET (ROW, COLUMN), 35
IF LOADED = 36 THEN PUT (ROW * 10, COLUMN * 10), BEACHDL, OR: PSET (ROW, COLUMN), 36
IF LOADED = 37 THEN PUT (ROW * 10, COLUMN * 10), BEACHDR, OR: PSET (ROW, COLUMN), 37
IF LOADED = 38 THEN PUT (ROW * 10, COLUMN * 10), KID, OR: PSET (ROW, COLUMN), 38
IF LOADED = 39 THEN PUT (ROW * 10, COLUMN * 10), GOLDBRICK, OR: PSET (ROW, COLUMN), 39
IF LOADED = 40 THEN PUT (ROW * 10, COLUMN * 10), GOLDPILLAR, OR: PSET (ROW, COLUMN), 40
IF LOADED = 41 THEN PUT (ROW * 10, COLUMN * 10), GOLDSTATUE, OR: PSET (ROW, COLUMN), 41
IF LOADED = 42 THEN PUT (ROW * 10, COLUMN * 10), GOLDBLOCK, OR: PSET (ROW, COLUMN), 42
IF LOADED = 43 THEN PUT (ROW * 10, COLUMN * 10), GOLDDOOR, OR: PSET (ROW, COLUMN), 43

NEXT COLUMN
NEXT ROW
CLOSE #1
RETURN

WINDOWS:
KEY(0) OFF
DIM CLEARANCE(1 TO 3000)
GET (81, 74)-(278, 117), CLEARANCE
LINE (81, 74)-(278, 117), 4, B
LINE (82, 75)-(277, 116), 12, B
LINE (83, 76)-(276, 115), 13, B
LINE (84, 77)-(275, 114), 12, B
LINE (85, 78)-(274, 113), 4, B
LINE (86, 79)-(273, 112), 0, BF
PLAY "MLT255L64O0C>D>E>F>G>A>B"
COLOR 15
REM    **, **        "b          m          e"      '23 chars max per line
GOSUB LOOKUP
PUT (13, 38), MONSTER, XOR
LOCATE 12, 12: INPUT "MONSTER NAME"; MONSTER$
LOCATE 13, 12: INPUT "NUMBER OF MONSTER"; NUMBER
KEY(0) OFF
PLAY "MLT255L64O0C>D>E>F>G>A>o1dMN"
LINE (81, 74)-(278, 117), 0, BF
PUT (81, 74), CLEARANCE, OR
PUT (13, 38), MONSTER, XOR
GOSUB LOOKUP
RETURN

LOOKUP:
KEY(0) OFF
IF VALUE = 1 THEN PUT (13, 38), BRICKWALL, XOR
IF VALUE = 2 THEN PUT (13, 38), BLOCK, XOR
IF VALUE = 3 THEN PUT (13, 38), PILLAR, XOR
IF VALUE = 4 THEN PUT (13, 38), STATUE, XOR
IF VALUE = 5 THEN PUT (13, 38), TOMB, XOR
IF VALUE = 6 THEN PUT (13, 38), BARRIER, XOR
IF VALUE = 7 THEN PUT (13, 38), TREE, XOR
IF VALUE = 8 THEN PUT (13, 38), KEYLOCK, XOR
IF VALUE = 9 THEN PUT (13, 38), ROCK, XOR
IF VALUE = 10 THEN PUT (13, 38), DOOR, XOR
IF VALUE = 11 THEN PUT (13, 38), STAIRCASE, XOR
IF VALUE = 12 THEN PUT (13, 38), GRASS, XOR
IF VALUE = 13 THEN PUT (13, 38), LADDER, XOR
IF VALUE = 14 AND CASTLE < 7 THEN PUT (13, 38), CAVE, XOR
IF VALUE = 14 AND CASTLE >= 7 THEN PUT (13, 38), INCAVE, XOR
IF VALUE = 15 AND CASTLE = 0 THEN PUT (13, 38), SIGN, XOR
IF VALUE = 15 AND CASTLE > 0 THEN PUT (13, 38), MONUMENT, XOR
IF VALUE = 16 THEN PUT (13, 38), MOUNT, XOR
IF VALUE = 17 THEN PUT (13, 38), MOUNTL, XOR
IF VALUE = 18 THEN PUT (13, 38), MOUNTR, XOR
IF VALUE = 19 THEN PUT (13, 38), MOUNTT, XOR
IF VALUE = 20 THEN PUT (13, 38), CHEST, XOR
IF VALUE = 21 THEN PUT (13, 38), SHRUB, XOR
IF VALUE = 22 THEN PUT (13, 38), WATER, XOR
IF VALUE = 23 THEN PUT (13, 38), LAVA, XOR
IF VALUE = 24 THEN PUT (13, 38), HEART, XOR
IF VALUE = 25 THEN PUT (13, 38), LOCKKEY, XOR
IF VALUE = 26 THEN PUT (13, 38), COIN, XOR
'VALUE 27 IS AN INVISIBLE WALL
'VALUE 28 IS A FAKE WALL
IF VALUE = 28 THEN PUT (13, 38), BRICKWALL, XOR
IF VALUE = 29 THEN PUT (13, 38), MAN, XOR
IF VALUE = 30 THEN PUT (13, 38), LADY, XOR
IF VALUE = 31 THEN PUT (13, 38), GEEZER, XOR
IF VALUE = 32 THEN PUT (13, 38), MERCHANT, XOR
IF VALUE = 33 THEN PUT (13, 38), CAVEWALL, XOR
IF VALUE = 34 THEN PUT (13, 38), BEACHUL, XOR
IF VALUE = 35 THEN PUT (13, 38), BEACHUR, XOR
IF VALUE = 36 THEN PUT (13, 38), BEACHDL, XOR
IF VALUE = 37 THEN PUT (13, 38), BEACHDR, XOR
IF VALUE = 38 THEN PUT (13, 38), KID, XOR
IF VALUE = 39 THEN PUT (13, 38), GOLDBRICK, XOR
IF VALUE = 40 THEN PUT (13, 38), GOLDPILLAR, XOR
IF VALUE = 41 THEN PUT (13, 38), GOLDSTATUE, XOR
IF VALUE = 42 THEN PUT (13, 38), GOLDBLOCK, XOR
IF VALUE = 43 THEN PUT (13, 38), GOLDDOOR, XOR
RETURN

TOGGLE:
KEY(0) OFF
MODE = -(MODE): LOCATE 22, 1: COLOR 7: PRINT MODE
RETURN

TILE:
KEY(0) OFF
GOSUB ERASER
GET (13, 38)-(22, 47), TILE
PUT (X * 10, Y * 10), TILE, OR
PSET (X, Y), VALUE
RETURN

RESELECT:
CHAIN "RCREATE3.BAS"

EXITDOS:
CLS : SYSTEM

