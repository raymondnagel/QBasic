COMMON PROGRESS$, SPEED, BOOMERANG, MAX, MAN, ROOM, CASTLE, X, Y, PX, PY, FACE$, STEPS, MONEY, KEYS, ITEM$, SOUND$, NAME$, COUNTRY$, SAVEFILE$
CLS

'REM ************************************************* DELETE THIS 
'INPUT "CHEATER:", CHEAT
'IF CHEAT = 1 THEN CASTLE = 1: MAN = 10: MAX = 10: BOOMERANG = 1: FACE$ = "DOWN"
'IF CHEAT = 2 THEN CASTLE = 2: MAN = 20: MAX = 20: BOOMERANG = 1: FACE$ = "RIGHT"
'IF CHEAT = 3 THEN CASTLE = 3: MAN = 30: MAX = 30: BOOMERANG = 2: FACE$ = "DOWN"
'IF CHEAT = 4 THEN CASTLE = 4: MAN = 40: MAX = 40: BOOMERANG = 2: FACE$ = "RIGHT"
'IF CHEAT = 5 THEN CASTLE = 5: MAN = 50: MAX = 50: BOOMERANG = 4: FACE$ = "DOWN"
'IF CHEAT = 6 THEN CASTLE = 6: MAN = 60: MAX = 60: BOOMERANG = 4: FACE$ = "RIGHT"
'X = 12: Y = 12: ITEM$ = "XXX"
'REM ************************************************* DELETE THIS 

SCREEN 13: CLS
MAGMA = 40: FLOW = 4
'PLAY "MST200L8O5GL64<<G>>L8AL64<<M1X>>L8BL64<<M1Y>>L8AL64<<M1X>>L8GL64<<G>>L8BL64<<M1Y>>L8AL64<<M1X>>L8BL64<<>C>>L2C"
'TIME = TIMER + 1: WHILE TIMER < TIME: WEND

BOOM$ = "MsT255L64MBO4cO2FMN": IF SOUND$ = "MUTE" THEN BOOM$ = ""
RECORDERMUSIC$ = "MFT80O4MLL64GF#GF#>CBCBED#ED#GF#GF#GF#GF#ED#ED#GF#GF#GF#GF#GF#GF#P1": IF SOUND$ = "MUTE" THEN RECORDERMUSIC$ = ""
POW2$ = "t255l64o1mlcgdafe>cgdafe<cgdafemn": IF SOUND$ = "MUTE" THEN POW2$ = ""
POW1$ = "t255l64o3msccccc<bbbb<aaa<gg<ff<e": IF SOUND$ = "MUTE" THEN POW1$ = ""
WARP$ = "T255L64MSO3CD>CD>CDO3EF>EF>EFO3GA>GA>GAMN": IF SOUND$ = "MUTE" THEN WARP$ = ""
SHUTTERNOISE$ = "T255L64O2MLCBCACGCFCECDCMN": IF SOUND$ = "MUTE" THEN SHUTTERNOISE$ = ""
GETHEART$ = "T255mnL64O5CEGB": IF SOUND$ = "MUTE" THEN GETHEART$ = ""
GETKEY$ = "T255mnL64O6CEFGBDEFB": IF SOUND$ = "MUTE" THEN GETKEY$ = ""
OPENLOCK$ = "T255mnL64O2CEFECFECEFCE": IF SOUND$ = "MUTE" THEN OPENLOCK$ = ""
getchest$ = "t255l32mlo3cdefedefgfefgagfgabagmn": IF SOUND$ = "MUTE" THEN getchest$ = ""
HAMMERSTRIKE$ = "T255MLL64O2CDEFGGABBGFEDCCCCCC<BBFEDMN": IF SOUND$ = "MUTE" THEN HAMMERSTRIKE$ = ""
POP$ = "T255L50MSCDEDECDCEDDCEDE": IF SOUND$ = "MUTE" THEN POP$ = ""
DREAD$ = "p4mfmso2t60l40c<bms>b>>l4<c<l52mlbgfedc<l8bl3ms>cp16": IF SOUND$ = "MUTE" THEN DREAD$ = ""
GULP$ = "t255l40mlo2ccdeefggabbgecp32ccdeefggabbgecp32ccdeffgabbgec": IF SOUND$ = "MUTE" THEN GULP$ = ""
SECRET$ = "MLO5L45T255P2EDEDCCDCDEFEFGBAB>CCCCCC": IF SOUND$ = "MUTE" THEN SECRET$ = ""
SPLUT$ = "MST255L64O1bC": IF SOUND$ = "MUTE" THEN SPLUT$ = ""
PAUSE$ = "MNL16T200O2CECG."





'                          ***SCENE IMAGES***
'LIGHT color  = SCOLOR1$
'MEDIUM color = SCOLOR2$
'DARK color   = SCOLOR3$
IF CASTLE <= 1 THEN SCOLOR1$ = "010": SCOLOR2$ = "002": SCOLOR3$ = "120"
IF CASTLE = 2 THEN SCOLOR1$ = "032": SCOLOR2$ = "001": SCOLOR3$ = "105"
IF CASTLE = 3 THEN SCOLOR1$ = "038": SCOLOR2$ = "004": SCOLOR3$ = "110"
IF CASTLE = 4 THEN SCOLOR1$ = "036": SCOLOR2$ = "035": SCOLOR3$ = "034"
IF CASTLE = 5 THEN SCOLOR1$ = "029": SCOLOR2$ = "028": SCOLOR3$ = "026"
IF CASTLE = 6 THEN SCOLOR1$ = "014": SCOLOR2$ = "043": SCOLOR3$ = "042"
IF CASTLE = 0 OR CASTLE > 6 THEN SCOLOR1$ = "024": SCOLOR2$ = "022": SCOLOR3$ = "020"




METER$ = "LIFE"
ITEM = 1
STEPS = 1

BLOCK$ = "BM0,30CxxxF9BL9E9G3L3D3R3U4CxxxL3HR5EL7GD7EU5FD3FCxxxR3FL5GR7EU7GD5HU3"
PILLAR$ = "BM10,30BM+3,+7CxxxGDR5UHGLEU6FEUL5DFEBLCxxxD0BR3D0BD7D0BL3D0EU5BM+2,-1CxxxD0BD7D0"
BRICKWALL$ = "BM30,30CxxxR9D9L9U9BFPxxx,xxxCxxxHR3L3D2BM+9,+3L3D2EBM-7,-2CxxxR9NU4L4D5NL5R4"
STATUE$ = "BM10,30BRCxxxFDLE2R3FNEFLBL2LUCxxxRF2LDL3ULEUCxxxD0BR3D0BG2R"
BARRIER$ = "BM80,30BDCxxxNR9BD3NR9BD3NR9DCxxxNR9BU3NR9BU3NR9BM+1,-2ND9BR3ND9BR3ND9BRCxxxND9BL3ND9BL3ND9"
LAVA$ = "BM230,30C42D9R9U9L8BDP42,42BHC43RFRFRFRFRBU4NLBD8LHLHLHLHLBD4RFRBR4C44LHLHLHLBU4RFRFRFRFRBU4LHLHL"

MID$(BLOCK$, 8, 3) = SCOLOR2$: MID$(BLOCK$, 29, 3) = SCOLOR1$: MID$(BLOCK$, 51, 3) = SCOLOR3$
MID$(PILLAR$, 16, 3) = SCOLOR2$: MID$(PILLAR$, 41, 3) = SCOLOR1$: MID$(PILLAR$, 72, 3) = SCOLOR3$
MID$(BRICKWALL$, 9, 3) = SCOLOR2$: MID$(BRICKWALL$, 23, 3) = SCOLOR2$: MID$(BRICKWALL$, 27, 3) = SCOLOR2$: MID$(BRICKWALL$, 31, 3) = SCOLOR1$: MID$(BRICKWALL$, 61, 3) = SCOLOR3$
MID$(STATUE$, 11, 3) = SCOLOR3$: MID$(STATUE$, 32, 3) = SCOLOR2$: MID$(STATUE$, 47, 3) = SCOLOR1$
MID$(BARRIER$, 11, 3) = SCOLOR3$: MID$(BARRIER$, 31, 3) = SCOLOR1$: MID$(BARRIER$, 74, 3) = SCOLOR2$

DRAW BLOCK$
DRAW PILLAR$
DRAW BRICKWALL$
DRAW STAIRCASE$
DRAW BARRIER$
DRAW LAVA$
DIM BLOCK(1 TO 26): GET (0, 30)-(9, 39), BLOCK
DIM PILLAR(1 TO 26): GET (10, 30)-(19, 39), PILLAR
DRAW STATUE$
DIM BRICKWALL(1 TO 26): GET (30, 30)-(39, 39), BRICKWALL
DIM STATUE(1 TO 26): GET (10, 30)-(19, 39), STATUE
DIM BARRIER(1 TO 26): GET (80, 30)-(89, 39), BARRIER
DIM LAVA(1 TO 26): GET (230, 30)-(239, 39), LAVA

'                           ***HERO IMAGE***
DRAW "BM0,0BR3C6R2NRDc1D0BLC65LDR2GDc4L2GC65D0BM+6,-2Gc4L2D2c9RDL3C65LC15DBR4DRHC65D0"
DIM MAN1R(1 TO 26): GET (0, 0)-(9, 9), MAN1R
DRAW "BM10,0BR3C6R2NRDc1LC65LDR2GDc4DEL2GC65D0BR4Gc9LDRGC65FC15LHG"
DIM MAN2R(1 TO 26): GET (10, 0)-(19, 9), MAN2R
DRAW "BM25,0C6L2NLDc1D0BRC65RDL2FDc4R2FC65D0BM-6,-2Fc4R2D2c9LDR3C65RC15DBL4DLEC65D0"
DIM MAN1L(1 TO 26): GET (20, 0)-(29, 9), MAN1L
DRAW "BM30,0BR5C6L2NLDc1RC65RDL2FDc4DHR2FC65D0BL4Fc9RDLFC65GC15REF"
DIM MAN2L(1 TO 26): GET (30, 0)-(39, 9), MAN2L
DRAW "BM40,0BR3C6R2Dc64ngc1L2RC65GFNEDc4DERL4HC65D0BM+6,+2D0BM-2,+1c9DHLDC65DC15LBR3DRHC65D0"
DIM MAN1D(1 TO 26): GET (40, 0)-(49, 9), MAN1D
DRAW "BM50,0BR5C6L2Dc64nfc1R2LC65FGNHDc4DHLR4EC65D0BM-6,+2D0BM+2,+1c9DERDC65DC15RBL3DLEC65D0"
DIM MAN2D(1 TO 26): GET (50, 0)-(59, 9), MAN2D
DRAW "BM60,0BR3C6R2DC65L2DR2GDc4DERL4HC65D0BM+6,+2D0BM-2,+1c9DHLDC65DC15LBR3DRHC65D0"
DIM MAN1U(1 TO 26): GET (60, 0)-(69, 9), MAN1U
DRAW "BM70,0BR5C6L2DC65R2DL2FDc4DHLR4EC65D0BM-6,+2D0BM+2,+1c9DERDC65DC15RBL3DLEC65D0"
DIM MAN2U(1 TO 26): GET (70, 0)-(79, 9), MAN2U
BOOM1$ = "BM80,0BM+2,+2C7 F4H2E2G4"
IF BOOMERANG = 2 THEN MID$(BOOM1$, 15, 2) = "12"
IF BOOMERANG = 4 THEN MID$(BOOM1$, 15, 2) = "47"
DRAW BOOM1$: DIM BOOM1(1 TO 26): GET (80, 0)-(89, 9), BOOM1
BOOM2$ = "BM90,0BM+4,+2C7 D4U2L2R4"
IF BOOMERANG = 2 THEN MID$(BOOM2$, 15, 2) = "12"
IF BOOMERANG = 4 THEN MID$(BOOM2$, 15, 2) = "32"
DRAW BOOM2$: DIM BOOM2(1 TO 26): GET (90, 0)-(99, 9), BOOM2
DRAW "BM110,0BM+5,+5C40NU3ND3C42NL3NR3NH3NF3C43NE3NG3"
DIM XPLODE(1 TO 26): GET (110, 0)-(119, 9), XPLODE


DRAW "BM200,0BFC12D7EU5FD3EU"
DIM SELECTOR(1 TO 20): GET (200, 0)-(205, 9), SELECTOR

1
'                          ***MONSTER IMAGE***
CLS
DIM bosses(1 TO 2500)
DEF SEG = VARSEG(bosses(1))
BLOAD "bosses.pic", VARPTR(bosses(1))
DEF SEG
PUT (0, 0), bosses, OR
DIM MONSTER1(1 TO 600): DIM MONSTER2(1 TO 600)



IF CASTLE = 1 THEN MONSTER$ = "MUNCHER": GET (0, 0)-(17, 12), MONSTER1: GET (20, 0)-(36, 12), MONSTER2: SHOT$ = "BM100,0BF4C9DRUC11HC1RFDGLHU":  FILESPEC$ = "CAS1#203.DAT": MLIFE = 10: MATTACK = 2: M1X = 17: M1Y = 9
IF CASTLE = 2 THEN MONSTER$ = "SCORP": GET (0, 17)-(18, 30), MONSTER1: GET (21, 17)-(38, 30), MONSTER2: SHOT$ = "BM100,0BM+2,+4C10ED2RU2F2BM+1,-2D0":  FILESPEC$ = "CAS2#101.DAT": MLIFE = 12: MATTACK = 4: M1X = 26: M1Y = 7
IF CASTLE = 3 THEN MONSTER$ = "GIANT": GET (0, 38)-(17, 57), MONSTER1: GET (20, 38)-(37, 57), MONSTER2: SHOT$ = "": FILESPEC$ = "CAS3#204.DAT": MLIFE = 18: MATTACK = 5: M1X = 17: M1Y = 7
IF CASTLE = 4 THEN MONSTER$ = "CENTAUR": GET (46, 0)-(65, 16), MONSTER1: GET (70, 0)-(89, 16), MONSTER2: SHOT$ = "BM100,0BM+1,+4C15R5C1UFG":  FILESPEC$ = "CAS4#604.DAT": MLIFE = 24: MATTACK = 7: M1X = 26: M1Y = 7
IF CASTLE = 5 THEN MONSTER$ = "DRACO": GET (46, 20)-(65, 34), MONSTER1: GET (70, 20)-(89, 35), MONSTER2: SHOT$ = "BM100,0BM+3,+2C42d0bm+2,+1gbm+2,+1gdlhrc41uebm+1,+2bh3dc43dbr2d0": FILESPEC$ = "CAS5#400.DAT": MLIFE = 36: MATTACK = 8: M1X = 8: M1Y = 9
IF CASTLE = 6 THEN MONSTER$ = "DEMON": GET (46, 40)-(64, 59), MONSTER1: GET (70, 40)-(88, 59), MONSTER2: SHOT$ = "BM100,0BM+2,+3C13EBR2FBD2GBL2HEC14EFGUC12D0": FILESPEC$ = "CAS6#303.DAT": MLIFE = 60: MATTACK = 9: M1X = 17: M1Y = 9
NUMBER = 1
IF CASTLE = 1 AND ROOM = 203 THEN IF MID$(PROGRESS$, 1, 1) = "X" THEN MONSTER$ = "NONE"
IF CASTLE = 2 AND ROOM = 101 THEN IF MID$(PROGRESS$, 2, 1) = "X" THEN MONSTER$ = "NONE"
IF CASTLE = 3 AND ROOM = 204 THEN IF MID$(PROGRESS$, 3, 1) = "X" THEN MONSTER$ = "NONE"
IF CASTLE = 4 AND ROOM = 604 THEN IF MID$(PROGRESS$, 4, 1) = "X" THEN MONSTER$ = "NONE"
IF CASTLE = 5 AND ROOM = 400 THEN IF MID$(PROGRESS$, 5, 1) = "X" THEN MONSTER$ = "NONE"
IF MONSTER$ = "NONE" THEN MLIFE = 0: NUMBER = 0
SHOOTCAP = 0

IF SHOT$ <> "" THEN DRAW SHOT$: DIM SHOT(1 TO 26): GET (100, 0)-(109, 9), SHOT: SHOOTCAP = 1

M1D = 4: M1M = 0: M1P = 1: PAUSE1 = 1

CLS
GOSUB SETBOUNDS
GOSUB READBITMAP
STEPS = 2
GOSUB PLACEME

M1L = MLIFE: M1PX = M1X: M1PY = M1Y

IF M1L > 0 THEN PUT (M1X * 10, M1Y * 10), MONSTER1, XOR: LINE (M1X, M1Y)-(M1X + 1, M1Y + 1), 2, BF
6

KEY 15, CHR$(128) + CHR$(72)
KEY 16, CHR$(128) + CHR$(75)
KEY 17, CHR$(128) + CHR$(77)
KEY 18, CHR$(128) + CHR$(80)
KEY 19, CHR$(128) + CHR$(&H1D)
KEY 20, CHR$(&H0) + CHR$(54)
KEY 21, CHR$(&H0) + CHR$(&H39)
KEY 22, CHR$(128) + CHR$(&H38)
KEY 23, CHR$(0) + CHR$(25)

ON KEY(15) GOSUB UPME
ON KEY(16) GOSUB LEFTME
ON KEY(17) GOSUB RIGHTME
ON KEY(18) GOSUB DOWNME
ON KEY(19) GOSUB BOOM
ON KEY(20) GOSUB SWITCH
ON KEY(21) GOSUB SWITCHMETER
ON KEY(22) GOSUB ACTIVATE
ON KEY(23) GOSUB PAUSE
GOSUB LIFEMETER: IF METER$ = "ITEM" THEN GOSUB ITEMMETER
MOVE = 0: PX = X: PY = Y: BOOM = 0
IF CASTLE = 0 THEN KEYS = 0
GOSUB ADVANCEMENT
GOSUB CLOSESHUTTERS
PLAY DREAD$
H = 0

DO
KEY(0) ON: FOR CHANCE = 1 TO 1: NEXT CHANCE: KEY(0) STOP
CLOCK = TIMER + .07
MAGMA = MAGMA + FLOW: PALETTE 44, MAGMA: IF MAGMA >= 60 OR MAGMA <= 35 THEN FLOW = -(FLOW): IF MAN <= INT(MAX / 5) THEN IF SOUND$ <> "MUTE" THEN PLAY "mst255l64o5ff<c"
IF FACE$ = "UP" AND POINT(PX, PY - 1) = 16 THEN KEY(0) OFF: ROOM = ROOM - 100: Y = 17: STEPS = 2: GOTO 1
IF FACE$ = "LEFT" AND POINT(PX - 1, PY) = 16 THEN KEY(0) OFF: ROOM = ROOM - 1: X = 29: STEPS = 2: GOTO 1
IF FACE$ = "RIGHT" AND POINT(PX + 1, PY) = 16 THEN KEY(0) OFF: ROOM = ROOM + 1: X = 6: STEPS = 2: GOTO 1
IF FACE$ = "DOWN" AND POINT(PX, PY + 1) = 16 THEN KEY(0) OFF: ROOM = ROOM + 100: Y = 2: STEPS = 2: GOTO 1
IF MOVE > 0 THEN GOSUB PLACEME
IF MOVE = 0 THEN FOR DELAY = 1 TO 10: NEXT DELAY: GOTO 10
PRESET (PX, PY), 0
IF FACE$ = "UP" THEN Y = Y - .2
IF FACE$ = "LEFT" THEN X = X - .2
IF FACE$ = "RIGHT" THEN X = X + .2
IF FACE$ = "DOWN" THEN Y = Y + .2
GOSUB STEPME: GOSUB PLACEME: MOVE = MOVE - 1
IF X > INT(X) + .5 THEN PX = INT(X) + 1 ELSE PX = INT(X)
IF Y > INT(Y) + .5 THEN PY = INT(Y) + 1 ELSE PY = INT(Y)
10 PSET (PX, PY), 1

MONSTERS:
MON1:
IF MONSTER$ = "SCORP" OR MONSTER$ = "CENTAUR" THEN GOTO UPNDOWN
IF M1M = 0 AND MONSTER$ = "GIANT" THEN GOTO CHASE
IF M1M = 0 AND MONSTER$ = "DRACO" THEN GOTO SOAR
IF M1M = 0 THEN M1M = 5: CLOAKX = M1PX: CLOAKY = M1PY: RANDOMIZE TIMER: M1D = INT(RND * 4) + 1: GOSUB CHECKMP
GOSUB PLACEMON
IF MONSTER$ <> "DRACO" THEN LINE (CLOAKX, CLOAKY)-(CLOAKX + 1, CLOAKY + 1), 0, BF
IF MONSTER$ = "DRACO" THEN LINE (CLOAKX, CLOAKY)-(CLOAKX + 2, CLOAKY + 1), 0, BF
18
IF M1D = 1 THEN M1Y = M1Y - .2
IF M1D = 2 THEN M1X = M1X - .2
IF M1D = 3 THEN M1X = M1X + .2: IF MONSTER$ = "DRACO" AND M1X >= 26 THEN GOSUB DRACOWARP
IF M1D = 4 THEN M1Y = M1Y + .2
19 GOSUB STEPMON: GOSUB PLACEMON: M1M = M1M - 1: LINE (M1PX, M1PY)-(M1PX + 1, M1PY + 1), 2, BF
IF M1X > INT(M1X) + .5 THEN M1PX = INT(M1X) + 1 ELSE M1PX = INT(M1X)
IF M1Y > INT(M1Y) + .5 THEN M1PY = INT(M1Y) + 1 ELSE M1PY = INT(M1Y)
IF INVINCE = 0 THEN IF M1PX = PX OR M1PX + 1 = PX THEN IF M1PY = PY OR M1PY + 1 = PY THEN PUT (X * 10, Y * 10), XPLODE, XOR: PLAY POW1$: BCLOCK = TIMER + .05: WHILE TIMER < BCLOCK: WEND: MAN = MAN - MATTACK: PUT (X * 10, Y * 10), XPLODE, XOR: GOSUB LIFEMETER: INVINCE = 1: ON TIMER(1) GOSUB VULNERABLE: TIMER ON
SHOOT2:
RANDOMIZE TIMER: IF SHOOTCAP = 0 OR SHOT <> 0 THEN GOTO MISSILE1
IF MONSTER$ = "CENTAUR" THEN RANDOMIZE TIMER: IF INT(RND * 2) + 1 = 1 THEN SDIR = 2: SY = M1PY: SX = M1PX - .2: GOSUB BOOM2: GOTO MISSILE1
IF MONSTER$ = "CENTAUR" THEN SDIR = 2: SY = M1PY + 1: SX = M1PX - .2: GOSUB BOOM2: GOTO MISSILE1
IF MONSTER$ <> "SCORP" AND MONSTER$ <> "DRACO" THEN RANDOMIZE TIMER: IF INT(RND * 4) <> 3 THEN GOTO MISSILE1
IF M1M <> 0 THEN GOTO MISSILE1
IF MONSTER$ = "DEMON" THEN GOTO DEMONCALL
IF M1L > 0 AND M1PX = PX THEN IF M1PY > PY THEN SDIR = 1: SY = M1PY - .2: SX = M1PX: GOSUB BOOM2
IF M1L > 0 AND M1PY = PY THEN IF M1PX > PX THEN SDIR = 2: SY = M1PY: SX = M1PX - .2: GOSUB BOOM2
IF M1L > 0 AND M1PY = PY THEN IF M1PX < PX THEN SDIR = 3:  SY = M1PY: SX = M1PX + 1.2: GOSUB BOOM2
IF M1L > 0 AND M1PX = PX THEN IF M1PY < PY THEN SDIR = 4:  SY = M1PY + 1.2: SX = M1PX: GOSUB BOOM2
IF M1L > 0 AND M1PX + 1 = PX THEN IF M1PY > PY THEN SDIR = 1: SY = M1PY - .2: SX = M1PX + 1: GOSUB BOOM2
IF M1L > 0 AND M1PY + 1 = PY THEN IF M1PX > PX THEN SDIR = 2: SY = M1PY + 1: SX = M1PX - .2: GOSUB BOOM2
IF M1L > 0 AND M1PY + 1 = PY THEN IF M1PX < PX THEN SDIR = 3: SY = M1PY + 1: SX = M1PX + 1.2: GOSUB BOOM2
IF M1L > 0 AND M1PX + 1 = PX THEN IF M1PY < PY THEN SDIR = 4: SY = M1PY + 1.2: SX = M1PX + 1: GOSUB BOOM2

MISSILE1:
IF BOOM = 0 THEN GOTO MISSILE2
IF BPOS = 1 THEN PUT (BX * 10, BY * 10), BOOM1, XOR ELSE PUT (BX * 10, BY * 10), BOOM2, XOR: boomif$ = "on"
IF BDIR = 1 THEN BY = BY - .5: IF BY <= 0 THEN BOOM = 0: GOTO MISSILE2
IF BDIR = 2 THEN BX = BX - .5: IF BX <= 0 THEN BOOM = 0: GOTO MISSILE2
IF BDIR = 3 THEN BX = BX + .5: IF BX >= 31 THEN BOOM = 0: GOTO MISSILE2
IF BDIR = 4 THEN BY = BY + .5: IF BY >= 19 THEN BOOM = 0: GOTO MISSILE2
BOOM = BOOM - 1: IF BPOS = 1 THEN BPOS = 2 ELSE BPOS = 1
IF BPOS = 1 THEN PUT (BX * 10, BY * 10), BOOM1, XOR ELSE PUT (BX * 10, BY * 10), BOOM2, XOR
IF BX > INT(BX) + .5 THEN BPX = INT(BX) + 1 ELSE BPX = INT(BX)
IF BY > INT(BY) + .5 THEN BPY = INT(BY) + 1 ELSE BPY = INT(BY)
IF M1L <= 0 GOTO 50
POW = 0
IF POINT(BPX, BPY) = 2 THEN BOOM = 0: GOSUB PLACEMON: PUT (M1X * 10, M1Y * 10), XPLODE, XOR: PUT ((M1X + 1) * 10, M1Y * 10), XPLODE, XOR: PUT (M1X * 10, (M1Y + 1) * 10), XPLODE, XOR: PUT ((M1X + 1) * 10, (M1Y + 1) * 10), XPLODE, XOR: PLAY POW1$: BCLOCK = TIMER + .05: WHILE TIMER < BCLOCK: WEND: M1L = M1L - BOOMERANG: PUT (M1X * 10, M1Y * 10), XPLODE, XOR: PUT ((M1X + 1) * 10, M1Y * 10), XPLODE, XOR: PUT (M1X * 10, (M1Y + 1) * 10), XPLODE, XOR: PUT ((M1X + 1) * 10, (M1Y + 1) * 10), XPLODE, XOR: GOSUB PLACEMON: IF M1L <= 0 THEN GOSUB PLACEMON: PLAY POW2$: LINE (M1PX, M1PY)-(M1PX + 1, M1PY + 1), 0, BF: POW = 1: M1L = 0
50
IF POW = 1 THEN IF M1L = 0 THEN GOSUB OPENSHUTTERS
POW = 0
IF BOOM = 0 AND BPOS = 1 THEN PUT (BX * 10, BY * 10), BOOM1, XOR: boomif$ = "on"
IF BOOM = 0 AND BPOS = 2 THEN PUT (BX * 10, BY * 10), BOOM2, XOR: boomif$ = "on"

MISSILE2:
IF SHOT = 0 THEN GOTO ENDLOOP
PUT (SX * 10, SY * 10), SHOT, XOR
IF SDIR = 1 THEN SY = SY - .5: IF SY <= 0 THEN SHOT = 0: GOTO ENDLOOP
IF SDIR = 2 THEN SX = SX - .5: IF SX <= 0 THEN SHOT = 0: GOTO ENDLOOP
IF SDIR = 3 THEN SX = SX + .5: IF SX >= 31 THEN SHOT = 0: GOTO ENDLOOP
IF SDIR = 4 THEN SY = SY + .5: IF SY >= 19 THEN SHOT = 0: GOTO ENDLOOP
SHOT = SHOT - 1: PUT (SX * 10, SY * 10), SHOT, XOR
IF SX > INT(SX) + .5 THEN SPX = INT(SX) + 1 ELSE SPX = INT(SX)
IF SY > INT(SY) + .5 THEN SPY = INT(SY) + 1 ELSE SPY = INT(SY)
IF SPX = PX AND SPY = PY THEN SHOT = 0: PUT (X * 10, Y * 10), XPLODE, XOR: PLAY POW1$: BCLOCK = TIMER + .05: WHILE TIMER < BCLOCK: WEND: MAN = MAN - MATTACK: PUT (X * 10, Y * 10), XPLODE, XOR: GOSUB LIFEMETER
IF SHOT = 0 THEN PUT (SX * 10, SY * 10), SHOT, XOR

ENDLOOP:
WHILE TIMER < CLOCK: WEND
LOOP UNTIL INKEY$ = ""
CHAIN "SAVE.BAS"

UPNDOWN:
IF M1M = 0 THEN M1M = 5: CLOAKX = M1PX: CLOAKY = M1PY
GOSUB PLACEMON
LINE (CLOAKX, CLOAKY)-(CLOAKX + 1, CLOAKY + 1), 0, BF
IF M1D = 1 AND M1M = 5 THEN IF POINT(M1PX, M1PY - 1) >= 2 THEN M1D = 4: GOTO SCORCEN
IF M1D = 4 AND M1M = 5 THEN IF POINT(M1PX, M1PY + 2) >= 2 THEN M1D = 1: GOTO SCORCEN
SCORCEN:
IF M1D = 1 THEN M1Y = M1Y - .2
IF M1D = 4 THEN M1Y = M1Y + .2
GOTO 19

CHASE:
IF M1M = 0 THEN M1M = 5: CLOAKX = M1PX: CLOAKY = M1PY
RANDOMIZE TIMER: CD = INT(RND * 2) + 1
IF CD = 1 THEN GOSUB CVERT
IF CD = 2 THEN GOSUB CHORZ
GOSUB CHECKMP
GOSUB PLACEMON
LINE (CLOAKX, CLOAKY)-(CLOAKX + 1, CLOAKY + 1), 0, BF
GOTO 18
CVERT:
IF M1PY > PY THEN M1D = 1
IF M1PY < PY THEN M1D = 4
IF M1PY = PY THEN M1D = 9: GOTO CHORZ
RETURN
CHORZ:
IF M1PX > PX THEN M1D = 2
IF M1PX < PX THEN M1D = 3
IF M1PX = PX AND M1D = 9 THEN M1D = 2: RETURN
IF M1PX = PX THEN GOTO CVERT
RETURN

SOAR:
M1M = 5: CLOAKX = M1PX: CLOAKY = M1PY
GOSUB CHECKMP
GOSUB PLACEMON
LINE (CLOAKX, CLOAKY)-(CLOAKX + 1, CLOAKY + 1), 0, BF
M1D = 3
GOTO 18
DRACOWARP:
M1X = 8: RANDOMIZE TIMER: M1Y = INT(RND * 5) + 7
M1PX = M1X: M1PY = M1Y
LINE (CLOAKX, CLOAKY)-(CLOAKX + 1, CLOAKY + 1), 0, BF
RETURN

DEMONCALL:
RANDOMIZE TIMER: SDIR = INT(RND * 4) + 1
SHOT = 9
IF SDIR = 1 THEN SX = PX: SY = PY + 5
IF SDIR = 2 THEN SX = PX + 5: SY = PY
IF SDIR = 3 THEN SX = PX - 4: SY = PY
IF SDIR = 4 THEN SX = PX: SY = PY - 4
IF POINT(SX, SY) <> 0 THEN SHOT = 0: GOTO MISSILE1
PUT (SX * 10, SY * 10), SHOT, XOR
PLAY BOOM$
GOTO MISSILE1

UPME:                                           'I MOVE UP.
IF MOVE <> 0 THEN RETURN
IF FACE$ <> "UP" THEN GOSUB PLACEME: FACE$ = "UP": GOSUB PLACEME: RETURN
IF POINT(PX, PY - 1) = 2 OR POINT(PX, PY - 1) = 3 OR POINT(PX, PY - 1) = 7 THEN RETURN
IF POINT(PX, PY - 1) <> BACK THEN DX = PX: DY = PY - 1: GOSUB CHECKSQUARE: IF MOVE = -1 THEN MOVE = 0: RETURN
KEY(0) STOP
GOSUB PLACEME
MOVE = 5
GOSUB PLACEME
RETURN
LEFTME:                                         'I MOVE LEFT.
IF MOVE <> 0 THEN RETURN
IF FACE$ <> "LEFT" THEN GOSUB PLACEME: FACE$ = "LEFT": GOSUB PLACEME: RETURN
IF POINT(PX - 1, PY) = 2 OR POINT(PX - 1, PY) = 3 OR POINT(PX - 1, PY) = 7 THEN RETURN
IF POINT(PX - 1, PY) <> BACK THEN DX = PX - 1: DY = PY: GOSUB CHECKSQUARE: IF MOVE = -1 THEN MOVE = 0: RETURN
KEY(0) STOP
GOSUB PLACEME
MOVE = 5
GOSUB PLACEME
RETURN
RIGHTME:                                        'I MOVE RIGHT.
IF MOVE <> 0 THEN RETURN
IF FACE$ <> "RIGHT" THEN GOSUB PLACEME: FACE$ = "RIGHT": GOSUB PLACEME: RETURN
IF POINT(PX + 1, PY) = 2 OR POINT(PX + 1, PY) = 3 OR POINT(PX + 1, PY) = 7 THEN RETURN
IF POINT(PX + 1, PY) <> BACK THEN DX = PX + 1: DY = PY: GOSUB CHECKSQUARE: IF MOVE = -1 THEN MOVE = 0: RETURN
KEY(0) STOP
GOSUB PLACEME
MOVE = 5
GOSUB PLACEME
RETURN
DOWNME:                                         'I MOVE DOWN.
IF MOVE <> 0 THEN RETURN
IF FACE$ <> "DOWN" THEN GOSUB PLACEME: FACE$ = "DOWN": GOSUB PLACEME: RETURN
IF POINT(PX, PY + 1) = 2 OR POINT(PX, PY + 1) = 3 OR POINT(PX, PY + 1) = 7 THEN RETURN
IF POINT(PX, PY + 1) <> BACK THEN DX = PX: DY = PY + 1: GOSUB CHECKSQUARE: IF MOVE = -1 THEN MOVE = 0: RETURN
KEY(0) STOP
GOSUB PLACEME
MOVE = 5
GOSUB PLACEME
RETURN

STEPME:                                         'I STEP.
IF STEPS = 1 THEN STEPS = 2: RETURN
IF STEPS = 2 THEN STEPS = 1: RETURN
PLACEME:                                        'PLACE MY IMAGE.
IF FACE$ = "UP" AND STEPS = 1 THEN PUT (X * 10, Y * 10), MAN1U, XOR
IF FACE$ = "UP" AND STEPS = 2 THEN PUT (X * 10, Y * 10), MAN2U, XOR
IF FACE$ = "LEFT" AND STEPS = 1 THEN PUT (X * 10, Y * 10), MAN1L, XOR
IF FACE$ = "LEFT" AND STEPS = 2 THEN PUT (X * 10, Y * 10), MAN2L, XOR
IF FACE$ = "RIGHT" AND STEPS = 1 THEN PUT (X * 10, Y * 10), MAN1R, XOR
IF FACE$ = "RIGHT" AND STEPS = 2 THEN PUT (X * 10, Y * 10), MAN2R, XOR
IF FACE$ = "DOWN" AND STEPS = 1 THEN PUT (X * 10, Y * 10), MAN1D, XOR
IF FACE$ = "DOWN" AND STEPS = 2 THEN PUT (X * 10, Y * 10), MAN2D, XOR
RETURN

STEPMON:                                        'MONSTER STEPS.
STEPMON2:
IF M1P = 1 THEN M1P = 2: RETURN
IF M1P = 2 THEN M1P = 1: RETURN
PLACEMON:                                       'PLACE MONSTER'S IMAGE.
IF M1P = 1 THEN PUT (M1X * 10, M1Y * 10), MONSTER1, XOR
IF M1P = 2 THEN PUT (M1X * 10, M1Y * 10), MONSTER2, XOR
RETURN

CHECKMP:
IF M1D = 1 THEN IF POINT(M1PX, M1PY - 1) < 2 AND POINT(M1PX + 1, M1PY - 1) < 2 THEN RETURN
IF M1D = 2 THEN IF POINT(M1PX - 1, M1PY) < 2 AND POINT(M1PX - 1, M1PY + 1) < 2 THEN RETURN
IF M1D = 3 THEN IF POINT(M1PX + 2, M1PY) < 2 AND POINT(M1PX + 2, M1PY + 1) < 2 THEN RETURN
IF M1D = 4 THEN IF POINT(M1PX, M1PY + 2) < 2 AND POINT(M1PX + 1, M1PY + 2) < 2 THEN RETURN
M1D = 0: RETURN



BOOM:
IF boomif$ = "on" THEN IF BOOM <> 0 AND BPOS = 1 THEN PUT (BX * 10, BY * 10), BOOM1, XOR: BOOM = 0
IF boomif$ = "on" THEN IF BOOM <> 0 AND BPOS = 2 THEN PUT (BX * 10, BY * 10), BOOM2, XOR: BOOM = 0
IF boomif$ = "off" AND BOOM = 1 THEN BOOM = 0
boomif$ = "off"
KEY(0) STOP
BX = X: BY = Y
IF FACE$ = "UP" THEN BY = Y - .2: BDIR = 1
IF FACE$ = "LEFT" THEN BX = X - .2: BDIR = 2
IF FACE$ = "RIGHT" THEN BX = X + .2: BDIR = 3
IF FACE$ = "DOWN" THEN BY = Y + .2: BDIR = 4
BOOM = 9: BPOS = 1
PUT (BX * 10, BY * 10), BOOM1, XOR
boomif$ = "on"
PLAY BOOM$
RETURN

BOOM2:
IF SHOT <> 0 THEN RETURN
KEY(0) STOP
SHOT = 9
PUT (SX * 10, SY * 10), SHOT, XOR
PLAY BOOM$
RETURN

VULNERABLE:
TIMER OFF
INVINCE = 0: RETURN

ACTIVATE:
IF MOVE <> 0 THEN RETURN
KEY(0) OFF
IF ITEM = 1 AND MID$(ITEM$, 1, 1) = "X" THEN GOTO USEHAMMER
IF ITEM = 2 AND MID$(ITEM$, 2, 1) = "X" THEN GOTO USERECORDER
IF ITEM = 3 AND MID$(ITEM$, 3, 1) = "X" THEN GOTO USEELIXER
RETURN

SWITCHMETER:
IF METER$ = "LIFE" THEN METER$ = "ITEM": GOSUB ITEMMETER: RETURN
IF METER$ = "ITEM" THEN METER$ = "LIFE": GOSUB LIFEMETER: RETURN

SWITCH:
IF METER$ = "LIFE" THEN RETURN
SW1: IF ITEM = 1 THEN PUT (5, 80), SELECTOR, XOR: ITEM = 2: GOTO SW4
SW2: IF ITEM = 2 THEN PUT (5, 100), SELECTOR, XOR: ITEM = 3: GOTO SW4
SW3: IF ITEM = 3 THEN PUT (5, 120), SELECTOR, XOR: ITEM = 1: GOTO SW4
SW4:
IF ITEM = 1 THEN PUT (5, 80), SELECTOR, XOR
IF ITEM = 2 THEN PUT (5, 100), SELECTOR, XOR
IF ITEM = 3 THEN PUT (5, 120), SELECTOR, XOR
RETURN

ITEMMETER:
IF METER$ = "LIFE" THEN RETURN
LINE (0, 65)-(30, 199), 0, BF
DRAW "BM11,68C10NLNRD4NLRBR3U4NLRBR2NR2D2NR2D2R2BR2U4F2E2D4"
IF MID$(ITEM$, 1, 1) = "X" THEN DRAW "BM14,80BDC26DFC25U3RC23D3UE2F2DU3RC25D3EC26UBM-3,-1C115GNHFGNHFGNHFGNHFDL2URC116EHNGEHNGEHNG"
IF MID$(ITEM$, 2, 1) = "X" THEN DRAW "BM14,100BR2C43R5GL3F2LDFLDFLDC42RDBU3D0BU2D0BU2D0"
IF MID$(ITEM$, 3, 1) = "X" THEN DRAW "BM14,120BR3C115R3DL3FRBM-3,-1C15FD3G2DFR5EUH2U3EBG2C53LFDLDLGFRUREFDL2C52EHBM-3,+2EBM+1,-3D0"
IF ITEM = 1 THEN PUT (5, 80), SELECTOR, XOR
IF ITEM = 2 THEN PUT (5, 100), SELECTOR, XOR
IF ITEM = 3 THEN PUT (5, 120), SELECTOR, XOR
IF MONEY > 99 THEN MONEY = 99
DRAW "BM9,148C43U4F2E2D4BR3HU2EFD2BDBR2U4F3DU4BR2NR2D2NR2D2R2BU4BR2DFND2EU"
COLOR 15
IF MONEY < 10 THEN LOCATE 20, 2: PRINT MONEY
IF MONEY >= 10 THEN LOCATE 20, 1: PRINT MONEY
IF KEYS > 9 THEN KEYS = 9
DRAW "BM11,168C14D2NE2ND2F2BR2NR2U2NR2U2R2BR2DFND2EUBR3NR2GFRFGL2"
LOCATE 23, 2: PRINT KEYS
RETURN

LIFEMETER:
IF MAN > MAX THEN MAN = MAX
IF MAN <= 0 THEN MAN = 0
IF MAN > 0 AND METER$ = "ITEM" THEN RETURN
LINE (0, 65)-(30, 199), 0, BF
DRAW "BM11,68C4D4R2BR2R2LU4NLRBR2NR2D2NR2D2BR4NR2U2NR2U2NR2"
IF MAN <= INT(MAX / 5) THEN DRAW "BM11,68C44D4R2BR2R2LU4NLRBR2NR2D2NR2D2BR4NR2U2NR2U2NR2"
LINE (17, 75)-(19, 75 + (MAX * 2)), 15, BF
LINE (18, 75)-(18, 75 + (MAN * 2)), 4
IF MAN <= 0 THEN LINE (X * 10, Y * 10)-STEP(9, 9), 0, BF: PUT (X * 10, Y * 10), MAN1D, OR: TIME = TIMER + 3: WHILE TIMER < TIME: WEND: CHAIN "LOSE.SEQ"
RETURN



USEHAMMER:
PLAY HAMMERSTRIKE$
RETURN

USERECORDER:
PLAY RECORDERMUSIC$
RETURN

USEELIXER:
MID$(ITEM$, 3, 1) = "O": MAN = MAX
FOR GULP = 1 TO 3: PLAY GULP$: NEXT GULP
METER$ = "ITEM"
GOSUB SWITCHMETER: GOSUB SWITCHMETER: RETURN


SETBOUNDS:
LINE (36, 0)-(36, 199), 23                      '
LINE (37, 0)-(37, 199), 25
LINE (38, 0)-(39, 199), 27, BF
LINE (40, 0)-(40, 199), 25
LINE (41, 0)-(41, 199), 23
LINE (0, 25)-(36, 25), 23                       '
LINE (0, 26)-(37, 26), 25
LINE (0, 27)-(38, 28), 27, BF
LINE (0, 29)-(37, 29), 25
LINE (0, 30)-(36, 30), 23
LINE (0, 55)-(36, 55), 23                       '
LINE (0, 56)-(37, 56), 25
LINE (0, 57)-(38, 58), 27, BF
LINE (0, 59)-(37, 59), 25
LINE (0, 60)-(36, 60), 23
LINE (36, 0)-(319, 0), 23                       '
LINE (37, 1)-(319, 1), 25
LINE (39, 2)-(319, 3), 27, BF
LINE (40, 4)-(319, 4), 25
LINE (41, 5)-(319, 5), 23
LINE (41, 194)-(319, 194), 23                       '
LINE (40, 195)-(319, 195), 25
LINE (39, 196)-(319, 197), 27, BF
LINE (37, 198)-(319, 198), 25
LINE (36, 199)-(319, 199), 23
LINE (314, 5)-(314, 194), 23                      '
LINE (315, 4)-(315, 195), 25
LINE (316, 2)-(317, 197), 27, BF
LINE (318, 1)-(318, 198), 25
LINE (319, 0)-(319, 199), 23
DISPLAYBOOM:
PUT (14, 42), BOOM1, OR
DISPLAY$ = "BM6,36CxxD4E2F2U4BR2NR2D2NR2D2R2BR2U3EFDNLD2BR2U4RFDNLBU2BR3GD2FEU2BUBR2ND4F3DU4"
MID$(DISPLAY$, 8, 2) = MID$(BOOM2$, 15, 2): DRAW DISPLAY$
RETURN

READBITMAP:
LINE (5, 1)-(30, 18), 16, B
LINE (6, 2)-(29, 17), 0, BF
SHUTTER$ = "                    ": SHUTTER = 1
OPEN FILESPEC$ FOR INPUT AS #1
INPUT #1, LOADED: INPUT #1, LOADED
FOR ROW = 6 TO 29
IF EOF(1) = 1 THEN EXIT FOR
FOR COLUMN = 2 TO 17
IF EOF(1) = 1 THEN EXIT FOR
IF EOF(1) = 0 THEN INPUT #1, LOADED
IF LOADED > 0 THEN PSET (ROW, COLUMN), 3
IF LOADED = 1 THEN PUT (ROW * 10, COLUMN * 10), BRICKWALL, OR
IF LOADED = 2 THEN PUT (ROW * 10, COLUMN * 10), BLOCK, OR
IF LOADED = 3 THEN PUT (ROW * 10, COLUMN * 10), PILLAR, OR
IF LOADED = 4 THEN PUT (ROW * 10, COLUMN * 10), STATUE, OR
IF LOADED = 6 THEN MID$(SHUTTER$, SHUTTER, 1) = CHR$(ROW): MID$(SHUTTER$, SHUTTER + 1, 1) = CHR$(COLUMN): SHUTTER = SHUTTER + 2: PRESET (ROW, COLUMN), 0
IF LOADED = 23 THEN PUT (ROW * 10, COLUMN * 10), LAVA, OR

NEXT COLUMN
NEXT ROW
CLOSE #1
RETURN

CHECKSQUARE:
IF POINT(DX, DY) = 17 THEN MOVE = -1: RETURN
RETURN

ADVANCEMENT:
FOR ADVANCE = 1 TO 5
PRESET (PX, PY), 0
GOSUB PLACEME
IF FACE$ = "UP" THEN Y = Y - .2
IF FACE$ = "LEFT" THEN X = X - .2
IF FACE$ = "RIGHT" THEN X = X + .2
IF FACE$ = "DOWN" THEN Y = Y + .2
GOSUB STEPME: GOSUB PLACEME
IF X > INT(X) + .5 THEN PX = INT(X) + 1 ELSE PX = INT(X)
IF Y > INT(Y) + .5 THEN PY = INT(Y) + 1 ELSE PY = INT(Y)
PSET (PX, PY), 1
TIME = TIMER + .1: WHILE TIMER < TIME: WEND
NEXT ADVANCE
RETURN

CLOSESHUTTERS:
FOR SHUT = 1 TO LEN(SHUTTER$) STEP 2
IF MID$(SHUTTER$, SHUT, 1) = " " THEN GOTO SKIPSHUTTER
PSET (ASC(MID$(SHUTTER$, SHUT, 1)), ASC(MID$(SHUTTER$, SHUT + 1, 1))), 3: PUT (ASC(MID$(SHUTTER$, SHUT, 1)) * 10, ASC(MID$(SHUTTER$, SHUT + 1, 1)) * 10), BARRIER, XOR: PLAY SHUTTERNOISE$
SKIPSHUTTER:
NEXT SHUT
RETURN

OPENSHUTTERS:
FOR SHUT = 1 TO LEN(SHUTTER$) STEP 2
IF MID$(SHUTTER$, SHUT, 1) = " " THEN GOTO SKIPSHUTTER2
PRESET (ASC(MID$(SHUTTER$, SHUT, 1)), ASC(MID$(SHUTTER$, SHUT + 1, 1))), 0: PUT (ASC(MID$(SHUTTER$, SHUT, 1)) * 10, ASC(MID$(SHUTTER$, SHUT + 1, 1)) * 10), BARRIER, XOR: PLAY SHUTTERNOISE$
SKIPSHUTTER2:
NEXT SHUT
GOTO WINLEVEL

PAUSE: LINE1$ = "": LINE2$ = "       *PAUSED*": LINE3$ = "": LINE4$ = "": GOSUB WINDOWS: RETURN

WINDOWS:
DIM CLEARANCE(1 TO 3000)
GET (81, 74)-(278, 117), CLEARANCE
LINE (81, 74)-(278, 117), 4, B
LINE (82, 75)-(277, 116), 12, B
LINE (83, 76)-(276, 115), 13, B
LINE (84, 77)-(275, 114), 12, B
LINE (85, 78)-(274, 113), 4, B
LINE (86, 79)-(273, 112), 0, BF
IF LINE2$ = "       *PAUSED*" THEN PLAY PAUSE$: GOTO paused
IF SOUND$ <> "MUTE" THEN PLAY "MLT255L64O0C>D>E>F>G>M1X>BMN"
paused:
IF POINT(DX, DY) = 15 THEN IF CASTLE = 9 AND ROOM = 409 THEN IF MID$(ITEM$, 3, 1) = "X" THEN LINE1$ = "You've already got a": LINE2$ = "full bottle of elixer.": LINE3$ = "You don't need any more": LINE4$ = "right now."
REM    **, **        "b          m          e"      '23 chars max per line
COLOR 15
LOCATE 11, 12: PRINT LINE1$                         '4 lines max
LOCATE 12, 12: PRINT LINE2$
LOCATE 13, 12: PRINT LINE3$
LOCATE 14, 12: PRINT LINE4$
KEY(0) OFF
GOSUB READTIME
IF LINE5$ <> "" THEN LINE (86, 79)-(273, 112), 0, BF: LOCATE 11, 12: PRINT LINE5$: LOCATE 12, 12: PRINT LINE6$: LOCATE 13, 12: PRINT LINE7$: LOCATE 14, 12: PRINT LINE8$: GOSUB READTIME
LINE (81, 74)-(278, 117), 0, BF
PUT (81, 74), CLEARANCE, OR
IF LINE2$ = "       *PAUSED*" THEN PLAY PAUSE$: GOTO unpaused
IF SOUND$ <> "MUTE" THEN PLAY "MLT255L64O6B<M1X<G<F<E<D<CMN"
IF POINT(DX, DY) = 15 THEN IF CASTLE = 9 AND ROOM = 409 THEN IF UCASE$(KEYSTROKE$) = "Y" AND MONEY >= 20 THEN MONEY = MONEY - 20: PLAY SECRET$: MID$(ITEM$, 3, 1) = "X": METER$ = "ITEM": GOSUB ITEMMETER
unpaused:
LINE1$ = "": LINE2$ = "": LINE3$ = "": LINE4$ = "": LINE5$ = "": LINE6$ = "": LINE7$ = "": LINE8$ = ""
RETURN

READTIME: KEYSTROKE$ = INKEY$: IF KEYSTROKE$ = "" THEN GOTO READTIME
RETURN


EXITDOS:
CLS : CHAIN "SAVE.BAS"

CHECKEXIT:
GOSUB PLACEME
FACE$ = "DOWN"
OPEN "EXITS.DAT" FOR INPUT AS #1
DO
INPUT #1, EXIT$
IF LEFT$(EXIT$, 12) = FILESPEC$ THEN EXIT DO
LOOP
CLOSE #1
CASTLE = ASC(MID$(EXIT$, 14, 1)) - 48
ROOM = VAL(MID$(EXIT$, 16, 3))
X = ASC(MID$(EXIT$, 20, 1)) - 40
Y = ASC(MID$(EXIT$, 21, 1)) - 40
CHAIN "GAME.BAS"

WINLEVEL:
IF CASTLE = 6 THEN GOTO COMPLETED
IF BOOM = 0 AND BPOS = 1 THEN PUT (BX * 10, BY * 10), BOOM1, XOR
IF BOOM = 0 AND BPOS = 2 THEN PUT (BX * 10, BY * 10), BOOM2, XOR
IF SOUND$ <> "MUTE" THEN PLAY "p4mfT90O4MLL64GAGAGAGAGAGAGAGAGAMSL16G...<B>DCP8L64CDEFGA>CP1"
TIME = TIMER + 3: WHILE TIMER < TIME: WEND
IF METER$ = "ITEM" THEN GOSUB SWITCHMETER
MAX = MAX + 10: MAN = MAX: GOSUB LIFEMETER: IF SOUND$ <> "MUTE" THEN PLAY "T255L64Mln30n28n26n24n22n20n21n22n23n24n26n28n30n34n40n36n34n32n30"
IF KEYS = 0 THEN GOTO COMPLETED
GOSUB SWITCHMETER
FOR SELLKEY = 0 TO KEYS
MONEY = MONEY + 5: PLAY GETKEY$
GOSUB ITEMMETER
NEXT SELLKEY
KEYS = 0
GOSUB ITEMMETER
COMPLETED:
TIME = TIMER + 2: WHILE TIMER < TIME: WEND

FOR SHRINK = 0 TO 160
LINE (SHRINK, SHRINK)-(319 - SHRINK, 199 - SHRINK), 0, B
TIME = TIMER + .0003: WHILE TIMER < TIME: WEND
NEXT SHRINK
IF CASTLE = 6 THEN CHAIN "WIN.SEQ"
CLS
GOSUB PLACEME
MID$(PROGRESS$, CASTLE, 1) = "X"
GOTO CHECKEXIT

